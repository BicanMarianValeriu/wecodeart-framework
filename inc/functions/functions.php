<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework 
 * @subpackage 	Functions
 * @copyright   Copyright (c) 2019, WeCodeArt Framework
 * @since		3.5
 * @version 	3.7.3
 */

if ( ! defined( 'ABSPATH' ) ) exit(); 

/**
 * Puts Everything togheter
 * 
 * @since	1.0
 * @version	3.3
 * 
 * @return	mixed 	Site Layout
 */
function wecodeart() {	
	get_header(); 
	do_action( 'wecodeart_inner_markup' ); 
	get_footer(); 
}


/**
 * Get a specific property of an array without needing to check if that property exists.
 * Provide a default value if you want to return a specific value if the property is not set.
 *
 * @since  	3.5
 *
 * @author 	Gravity Forms - Easiest Tool to Create Advanced Forms for Your WordPress-Powered Website.
 * @link  	https://www.gravityforms.com/
 *
 * @param 	array  $array   Array from which the property's value should be retrieved.
 * @param 	string $prop    Name of the property to be retrieved.
 * @param 	string $default Optional. Value that should be returned if the property is not set or empty. Defaults to null.
 *
 * @return null|string|mixed The value
 */
function wecodeart_get_prop( $array, $prop, $default = null ) {
	if ( ! is_array( $array ) && ! ( is_object( $array ) && $array instanceof ArrayAccess ) ) return $default; 
	if ( isset( $array[ $prop ] ) ) $value = $array[ $prop ];
	else $value = ''; 
	return empty( $value ) && null !== $default ? $default : $value;
}

/**
 * Check if current post has full/wide blocks aligns
 * 
 * @since	3.6.1
 * @param  	object|integer
 * 
 * @return 	boolean
 */
function wecodeart_gutenberg_is_wide_or_full( $post = 0 ) {
	if( ! $post ) global $post;  
	
	// Retrieve an array of blocks used for this post.
	$blocks = parse_blocks( $post->post_content ); 

	foreach( $blocks as $block ) {  
		// If we have full/wide allign return true early and bail.
		if( in_array( wecodeart_get_prop( $block['attrs'], 'align' ), [ 'full', 'wide' ] ) ) {
			return true;
			break;
		}
	}

	return false;
}

/**
 * Remove sidebar on gutenberg posts with wide/full layout
 * 
 * @since	3.6.1
 * @uses 	filter: `wecodeart/filter/gutenberg/wide_or_full_content`
 * 
 * @return 	boolean|null
 */
function wecodeart_gutenberg_wide_or_full_content() {
	$enabled = apply_filters( 'wecodeart/filter/gutenberg/wide_or_full_content', true );
	
	if( $enabled === false ) return false; 
	if( is_singular() && wecodeart_gutenberg_is_wide_or_full() ) return true;

	return null;
}

/**
 * Trim CSS
 *
 * @since 	3.7.7
 * @param 	string $css CSS content to trim.
 * @return string
 */
function wecodeart_trim_css( $css = '' ) {

	// Trim white space for faster page loading.
	if ( ! empty( $css ) ) {
		$css = preg_replace( '!/\*[^*]*\*+([^/][^*]*\*+)*/!', '', $css );
		$css = str_replace( array( "\r\n", "\r", "\n", "\t", '  ', '    ', '    ' ), '', $css );
		$css = str_replace( ', ', ',', $css );
	}

	return $css;
}