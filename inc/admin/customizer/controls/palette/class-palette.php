<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Customizer\Controls\Pallete
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since 		5.0.0
 * @version		5.0.0
 */

namespace WeCodeArt\Admin\Customizer\Controls;

defined( 'ABSPATH' ) || exit;

use WeCodeArt\Core\Scripts;
use function WeCodeArt\Functions\get_prop;

/**
 * Sortable control (uses checkboxes).
 */
class Palette extends \WP_Customize_Control {

	use Scripts\Base;

	/**
	 * The control type.
	 *
	 * @access 	public
	 * @var 	string
	 */
	public $type = 'wecodeart-palette';

	/**
	 * Enqueue control related scripts/styles.
	 */
	public function enqueue() {
		wp_enqueue_style(
			$this->make_handle(),
			$this->get_asset( 'css', 'customizer-palette' ),
			[ 'wp-components' ],
			wecodeart( 'version' )
		);

		$deps = [ 'lodash', 'react', 'react-dom', 'wp-components', 'wp-element', 'wp-i18n', 'wp-polyfill' ];
		
		wp_enqueue_script(
            $this->make_handle(),
			$this->get_asset( 'js', 'customizer-palette' ),
           	array_merge( $deps, [ 'jquery', 'customize-base' ] ),
			wecodeart( 'version' ),
            true
		);
    }
    
	/**
	 * Send to JS.
	 */
	public function to_json() {
		parent::to_json();
		$this->json['default'] = $this->setting->default;
		$this->json['inputAttrs'] = $this->input_attrs;

		$palette_theme 	= wecodeart_json( [ 'settings', 'color', 'palette', 'theme' ], [] );
		$palette_user 	= wecodeart_json( [ 'settings', 'color', 'palette', 'user' ], $palette_theme );
			
		$this->json['palette'] 		= $palette_user;
		$this->json['choices'] 		= wecodeart_json( [ 'settings', 'custom', 'colorPalettes' ], [] );
	}
}