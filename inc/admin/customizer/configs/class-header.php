<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Customizer\Configs\Header
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since 		3.5
 * @version		4.2.0
 */

namespace WeCodeArt\Admin\Customizer\Configs;

defined( 'ABSPATH' ) || exit;

use WeCodeArt\Admin\Customizer\Config;
use WeCodeArt\Admin\Customizer\Formatting;

/**
 * Customizer Config initial setup
 */
class Header extends Config {
	/**
	 * Register Site Layout Customizer Configurations
	 *
	 * @param 	array                $configurations 
	 * @param 	WP_Customize_Manager $wp_customize instance of WP_Customize_Manager.
	 * @since 	3.6
	 *
	 * @return 	array 
	 */
	public function register( $configurations, $wp_customize ) {
		// A handy class for formatting theme mods.
		$formatting = Formatting::get_instance();

		$_configs = [
			[
				'name'			=> 'header-bar-position',
				'type' 			=> 'control',
				'control'  		=> 'select',
				'section'		=> 'header-bar',
				'title' 		=> esc_html__( 'Header Position', 'wecodeart' ),
				'description' 	=> esc_html__( 'Choose the type of the header.', 'wecodeart' ),
				'choices'  		=> [
					''				=> esc_html__( 'Default', 'wecodeart' ),
					'sticky-top' 	=> esc_html__( 'Sticky', 'wecodeart' ),
					'fixed-top' 	=> esc_html__( 'Fixed', 'wecodeart' ),
				],
				'priority' 		=> 0, 
				'sanitize_callback'	=> [ $formatting, 'sanitize_choices' ], 
				'transport'			=> 'postMessage',
				'output'			=> [
					[
						'element'  	=> 'header.header',
						'function'	=> 'html',
						'attr'		=> 'class',
						'value'		=> [ 'sticky-top', 'fixed-top' ]
					]
				]
			],
			[
				'name'			=> 'header-bar-toggle',
				'type' 			=> 'control',
				'control'  		=> 'select',
				'section'		=> 'header-bar',
				'title' 		=> esc_html__( 'Mobile Toggle', 'wecodeart' ),
				'description' 	=> esc_html__( 'Choose the type of the header on mobile devices.', 'wecodeart' ),
				'choices'  		=> [
					'collapse'	=> esc_html__( 'Collapse', 'wecodeart' ),
					'offcanvas'	=> esc_html__( 'OffCanvas', 'wecodeart' ),
				],
				'priority' 		=> 5, 
				'sanitize_callback'	=> [ $formatting, 'sanitize_choices' ],
			],
			[
				'name'			=> 'header-bar-container',
				'type' 			=> 'control',
				'control'  		=> 'select',
				'section'		=> 'header-bar',
				'title' 		=> esc_html__( 'Grid Type', 'wecodeart' ),
				'description' 	=> esc_html__( 'Choose the type of the container class.', 'wecodeart' ),
				'choices'  		=> [
					'container'			=> esc_html__( 'Container', 'wecodeart' ),
					'container-fluid' 	=> esc_html__( 'Container Fluid', 'wecodeart' ),
				],
				'priority' 		=> 10, 
				'sanitize_callback'	=> [ $formatting, 'sanitize_choices' ], 
				'transport'			=> 'postMessage',
				'output'			=> [
					[
						'element'  	=> '.navbar .container, .navbar .container-fluid',
						'function'	=> 'html',
						'attr'		=> 'class',
						'value'		=> [ 'container', 'container-fluid' ]
					]
				]
			],
			[
				'name'			=> 'header-bar-modules',
				'type'        	=> 'control',
				'control'  		=> 'wecodeart-sortable',
				'section'		=> 'header-bar',
				'title'        	=> esc_html__( 'Header Bar Modules', 'wecodeart' ),
				'description'	=> esc_html__( 'Enable and reorder Header Bar modules.', 'wecodeart' ),
				'priority'   	=> 15, 
				'choices'		=> wp_list_pluck( \WeCodeArt\Core\Header::navbar_modules(), 'label' ),
				'transport'		=> 'postMessage',
				'partial'		=> [
					'selector'        		=> '.navbar#navbar',
					'render_callback' 		=> [ 'WeCodeArt\Core\Header', 'render_navbar' ],
					'container_inclusive' 	=> true
				]
			],
			[
				'name'			=> 'header-design-bg',
				'type' 			=> 'control',
				'control'  		=> 'wecodeart-color',
				'section'		=> 'header-design',
				'priority'   	=> 20, 
				'title' 		=> esc_html__( 'Header background color', 'wecodeart' ),
				'description'	=> esc_html__( 'Background color of the header wrapper. Defaults to CSS color.', 'wecodeart' ),
				'transport'		=> 'postMessage',
				'output'		=> [
					[
						'element'  => 'header.header',
						'property' => 'background-color'
					],
				]
			],
			[
				'name'			=> 'header-design-color',
				'type' 			=> 'control',
				'control'  		=> 'wecodeart-color',
				'section'		=> 'header-design',
				'priority'   	=> 25, 
				'title' 		=> esc_html__( 'Header text color', 'wecodeart' ),
				'description'	=> esc_html__( 'Color of the header text. Defaults to CSS color.', 'wecodeart' ),
				'transport'		=> 'postMessage',
				'output'		=> [
					[
						'element'  => 'header.header',
						'property' => 'color'
					],
				]
			],
			[
				'name'			=> 'header-design-links',
				'type' 			=> 'control',
				'control'  		=> 'wecodeart-color',
				'section'		=> 'header-design',
				'priority'   	=> 30, 
				'title' 		=> esc_html__( 'Header links color', 'wecodeart' ),
				'description'	=> esc_html__( 'Color of the header links. Defaults to CSS color.', 'wecodeart' ),
				'transport'		=> 'postMessage',
				'output'		=> [
					[
						'element'  => 'header.header a',
						'property' => 'color'
					],
				]
			],
		];

		return array_merge( $configurations, $_configs );
	}
}
