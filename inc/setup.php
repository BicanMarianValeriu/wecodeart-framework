<?php
/**
 * WeCodeArt Framework Setup.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework.
 * @subpackage  Setup
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		3.9.5
 * @version		5.0.0
 */

use function WeCodeArt\Functions\get_prop;

/**
 * Bind JSON.
 *
 * @return  void
 */
wecodeart()->bind( 'JSON', function () {
    return \WP_Theme_JSON_Resolver_Gutenberg::get_merged_data()->get_raw_data();
} );

/**
 * Bind Config.
 *
 * @param   array   $config     - configuration object passed earlier.
 *
 * @return  void
 */
wecodeart()->bind( 'config', function () use ( $config ) {
    return new WeCodeArt\Config( $config );
} );

/**
 * Bind Template.
 *
 * @since   5.0.0
 *
 * @return  void
 */
wecodeart()->bind( 'template', function () {
    return new WeCodeArt\Markup\Template( wecodeart_config() );
} );

/**
 * Bind Inputs.
 * 
 * @since   5.0.0
 *
 * @return  void
 */
wecodeart()->bind( 'inputs', function () {
    return WeCodeArt\Markup\Inputs::get_instance();
} );

/**
 * Bind Conditionals.
 *
 * @since   4.0.1
 *
 * @return  void
 */
wecodeart()->bind( 'conditionals', function () {
    return WeCodeArt\Conditional::get_instance();
} );

/**
 * Bind Integrations.
 *
 * @since   4.1.0
 *
 * @return  void
 */
wecodeart()->bind( 'integrations', function () {
    return WeCodeArt\Support::get_instance();
} );

/**
 * Bind Layout.
 *
 * @param   array   $parameters  Array of strings/functions - accepts `header/content/footer` and callable function as keys
 *
 * @return  void
 */
wecodeart()->bind( 'layout', function ( WeCodeArt $theme, $parameters ) {
    if( empty( $parameters ) ) {
        $parameters = [ 'header', 'content', 'footer' ];
    }

    array_map( function( $partial ) {
        switch( $partial ) {
            case 'header' :
                /**
                 * @see - https://developer.wordpress.org/reference/functions/get_header/
                 */
                get_header();
                break;

            case 'content' :
                /**
                 * @see - WeCodeArt\Core\Content::render_modules();
                 */
                do_action( 'wecodeart/content/markup' );
                break;

            case 'footer' :
                /**
                 * @see - https://developer.wordpress.org/reference/functions/get_footer/
                 */
                get_footer();
                break;

            default: 
                return is_callable( $partial ) && call_user_func( $partial );
        }
    }, $parameters );
} );

/**
 * Bind ThemeName.
 *
 * @since   3.9.5
 *
 * @return string
 */
wecodeart()->bind( 'name', function () {
    static $handle;

	if ( is_null( $handle ) ) {
		if ( defined( 'CHILD_THEME_NAME' ) && CHILD_THEME_NAME ) {
			$handle = sanitize_title_with_dashes( CHILD_THEME_NAME );
		} else {
			$handle = sanitize_title_with_dashes( wp_get_theme()->get( 'Name' ) );
		}
	}

	return $handle;
} );

/**
 * Bind Version.
 *
 * @since   3.9.5
 * @version 4.0.1
 *
 * @return string
 */
wecodeart()->bind( 'version', function () {
    if ( wecodeart_if( 'is_dev_mode' ) ) {
		return (string) time();
	}

	static $version;

	if ( is_null( $version ) ) {
		if ( defined( 'CHILD_THEME_VERSION' ) && CHILD_THEME_VERSION ) {
			$version = CHILD_THEME_VERSION;
		} else {
			$version = wp_get_theme()->get( 'Version' );
		}
	}

	return $version;
} );