<?php namespace WeCodeArt\Walkers;

// Exit if accessed directly
if ( ! defined( 'ABSPATH' ) ) exit();

// Use
use Walker_Comment;

/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Comment HTML Template (Walker)
 * @copyright   Copyright (c) 2019, WeCodeArt Framework
 * @since 		v1.9
 * @version		v3.6.7
 */

class Comment extends Walker_Comment {
	var $tree_type = 'comment';
	var $db_fields = array( 'parent' => 'comment_parent', 'id' => 'comment_ID' );

	/**
	 * Start Level
	 */
	function start_lvl( &$output, $depth = 0, $args = array() ) {
		$output .= '<ul class="comment__children offset-md-1 unstyled pl-0">' . "\n";
	}

	/**
	 * End Level
	 */
	function end_lvl( &$output, $depth = 0, $args = array() ) {
		$output .= "</ul>\n";
	}

	/**
	 * End Element
	 */
	function end_el( &$output, $comment, $depth = 0, $args = array() ) {
		$output .= "</li>\n";
	}

	/**
	 * Outputs a pingback comment.
	 * @since	2.0
	 * @version	3.2
	 */
	protected function ping( $comment, $depth, $args ) {
		// Get what we need
		$class = join( ' ', get_comment_class() );
		// The HTML
		echo '<li id="ping-' . esc_attr( $comment->comment_ID ) . '" class="' . esc_attr( $class ) . '">';
		printf(
			'<div class="ping-body"><p>%1$s %2$s<p></div>', 
			get_comment_author_link( $comment ), 
			get_edit_comment_link( '&#9998;', '<span class="badge primary float-right">', '</span>' )
		);
	}
	
	/**
	 * Outputs a HTML5 comment.
	 * @since	2.0
	 * @version	3.6
	 */
	protected function comment( $comment, $depth, $args ) {
		// Get what we need
		$class 			= join( ' ', get_comment_class() );
		$author_img 	= get_avatar( $comment, $args['avatar_size'], '', __( 'Author\'s gravatar', 'wecodeart' ) );
		$author_name 	= '<strong itemprop="name">' . $comment->comment_author . '</strong>';
		if ( ! empty( $comment->comment_author_url ) && 'http://' !== $comment->comment_author_url ) {
			$author_name = sprintf( '<a href="%1$s" rel="author" itemprop="url">%2$s</a>', esc_url( $comment->comment_author_url ), $author_name );
		}

		// Setup Filters
		$comment_date = apply_filters( 'wecodeart/filter/comments/date/enable', true, get_post_type() );
		$comment_amst = apply_filters( 
			'wecodeart/filter/comments/awaiting-moderation-text', 
			__( 'Your comment is awaiting moderation.', 'wecodeart' ) 
		);	

		// The HTML
		echo '<li id="comment-' . esc_attr( $comment->comment_ID ) . '" class="' . esc_attr( $class ) . '" itemscope itemtype="http://schema.org/Comment">';
			echo '<div class="comment__body row">';
			do_action( 'wecodeart/hook/comment/top' ); // Hook Comment Top
				echo '<div class="col-12">';
					echo '<div class="row">';
						echo '<div class="comment-avatar col-auto"><figure class="gravatar">' . $author_img . '</figure></div>';
						echo '<div class="comment-meta col subheader">';
							edit_comment_link ( '&#9998;', '<span class="comment-edit badge float-right">', '</span>' );
							printf( '<span class="comment-author">%s</span>', $author_name );				
							if ( $comment_date ) :
								printf( 
									'<p class="comment-date"><time class="created" itemprop="dateCreated" datetime="%1$s">%2$s</time></p>', 
									esc_html( get_comment_date( DATE_W3C ) ),
									esc_html( get_comment_date() ) . ' ' . __( 'at', 'wecodeart' ) . ' ' . esc_html( get_comment_time() ) 
								);
							endif;
						echo '</div>';
					echo '</div>';
				echo '</div>';
				echo '<div class="col-12">';
					if ( ! $comment->comment_approved ) echo '<p class="callout">' . $comment_amst .'</p>';
					printf( '<div class="comment-content" itemprop="text"><p>%s</p></div>', $comment->comment_content );	
					comment_reply_link( array_merge( $args, array(
						'depth'  => $depth,
						'before' => '<span class="comment-reply float-right">',
						'after'  => '</span>',
					) ) );
				echo '</div>';
			do_action( 'wecodeart/hook/comment/bottom' ); // Hook Comment Bottom
			echo '</div>';
		// No ending tag because of nesting	
	}
}