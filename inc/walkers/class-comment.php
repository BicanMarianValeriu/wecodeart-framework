<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Comment HTML Template (Walker)
 * @copyright   Copyright (c) 2019, WeCodeArt Framework
 * @since		1.9
 * @version		4.0.2
 */

namespace WeCodeArt\Walkers;

defined( 'ABSPATH' ) || exit();

use Walker_Comment;
use WeCodeArt\Markup;

/**
 * Comment Walker Class
 */
class Comment extends Walker_Comment {
	var $tree_type = 'comment';
	var $db_fields = [ 
		'parent' 	=> 'comment_parent',
		'id' 		=> 'comment_ID' 
	];

	/**
	 * Start Level
	 */
	function start_lvl( &$output, $depth = 0, $args = [] ) {
		$output .= '<ul class="comment__children offset-md-1 unstyled pl-0">' . "\n";
	}

	/**
	 * End Level
	 */
	function end_lvl( &$output, $depth = 0, $args = [] ) {
		$output .= "</ul>\n";
	}

	/**
	 * End Element
	 */
	function end_el( &$output, $comment, $depth = 0, $args = [] ) {
		$output .= "</li>\n";
	}

	/**
	 * Outputs a pingback comment.
	 *
	 * @since	2.0
	 * @version	4.0.2
	 */
	protected function ping( $comment, $depth, $args ) {
		?>
		<li class="<?php echo esc_attr( join( ' ', get_comment_class() ) ); ?>"
			id="ping-<?php echo esc_attr( $comment->comment_ID ); ?>">
			<div class="ping-body"><?php

				// Ping content.
				echo wp_kses_post( comment_author_link( $comment ) );

				// Edit link.
				edit_comment_link( '&#9998;', '<span class="badge badge-primary text-white float-right">', '</span>' );
				
			?></div>
		<?php 
	}
	
	/**
	 * Outputs a HTML5 comment.
	 *
	 * @since	2.0
	 * @version	4.0.2
	 *
	 * @return 	void
	 */
	protected function comment( $comment, $depth, $args ) {
		?>
		<li class="<?php echo esc_attr( join( ' ', get_comment_class() ) ); ?>"
			id="comment-<?php echo esc_attr( $comment->comment_ID ); ?>"
			itemscope=""
			itemtype="http://schema.org/Comment">
		<?php

			// Get what we need.
			$author_name 	= '<strong itemprop="name">' . $comment->comment_author . '</strong>';
			if ( ! empty( $comment->comment_author_url ) && 'http://' !== $comment->comment_author_url ) {
				$author_name = sprintf(
					'<a href="%1$s" rel="external nofollow" itemprop="url">%2$s</a>', 
					esc_url( $comment->comment_author_url ),
					$author_name
				);
			}

			// Comment body template.
			Markup::template( 'entry/comment', [
				'awaiting'	=> esc_html__( 'Your comment is awaiting moderation.', 'wecodeart' ),
				'by_author' => in_array( 'bypostauthor', get_comment_class() ),
				'comment' 	=> $comment,
				'depth'		=> $depth,
				'args'		=> $args,
				'author' 	=> [
					'name'		=> $author_name,
					'gravatar' 	=> get_avatar(
						$comment,
						$args['avatar_size'],
						'',
						esc_html__( 'Author\'s gravatar', 'wecodeart' )
					),
				],
			] );
	}
}