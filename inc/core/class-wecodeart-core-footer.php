<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Core\Footer
 * @copyright   Copyright (c) 2019, WeCodeArt Framework
 * @since 		3.5
 * @version		3.7.1
 */

namespace WeCodeArt\Core;

if ( ! defined( 'ABSPATH' ) ) exit();

use WeCodeArt\Customizer;
use WeCodeArt\Utilities\Markup;

/**
 * Handles Footer Area of the Framework
 */
class Footer {
	use \WeCodeArt\Singleton;

	/**
	 * Send to Constructor
	 * @since 3.6.2
	 */
	public function init() {
		add_action( 'wecodeart_footer_markup', 		[ $this, 'footer_markup' ] );
		add_action( 'wecodeart/hook/footer/bottom', [ $this, 'attribution_markup' ], 95 );
		add_action( 'widgets_init', 				[ $this, 'register_sidebars' ] );
	}
	
	/**
	 * Output FOOTER markup function
	 *
	 * @uses	WeCodeArt\Utilities\Markup::wrap()
	 * @since 	1.0
	 * @version	3.7.0
	 *
	 * @return 	HTML 
	 */
	public function footer_markup() {
		Markup::wrap( 'footer', [ [
			'tag' 	=> 'footer',
			'attrs' => [
				'id' 		=> 'footer', 
				'class'		=> 'footer', 
				'itemscope' => 'itemscope',
				'itemtype' 	=> 'http://schema.org/WPFooter'
			]
		] ], function() {
			/** 
			 * @hook	'wecodeart/hook/footer/top'
			 */ 
			do_action( 'wecodeart/hook/footer/top' );
			
			Footer::render_widgets();
			
			/** 
			 * @hook	'wecodeart/hook/footer/bottom' 	
			 * @hooked 	{
			 * - WeCodeArt\Core\Footer->attribution_markup()	- 95	Attribution 
			 * }
			 */ 
			do_action( 'wecodeart/hook/footer/bottom' ); 
		} ); 
	}

	/**
	 * Footer Attribution
	 *
	 * @uses	WeCodeArt\Utilities\Markup::wrap()
	 * @since 	1.0
	 * @version 3.7.2
	 *
	 * @return 	void
	 */
	public function attribution_markup() { 

		Markup::wrap( 'footer-attribution', [ 
			[ 'tag' => 'div', 'attrs' => [ 'class' => 'footer__attribution attribution' ] ], 
			[ 'tag' => 'div', 'attrs' => [ 'class' => 'container-fluid' ] ], 
			[ 'tag' => 'div', 'attrs' => [ 'class' => 'row py-3' ] ], 
			[ 'tag' => 'div', 'attrs' => [ 'class' => 'col text-center' ] ] 
		], function() {   
			?>
			<span class="attribution__copyright"><?php echo esc_html( get_theme_mod( 'footer-copyright-text' ) ); ?></span>
			<span class="attribution__credits">
				<?php
					printf( 
						esc_html__( 'Built on %1$s.', 'wecodeart' ), 
						'<a href="https://www.wecodeart.com/" target="_blank">WeCodeArt Framework</a>' 
					);
				?>
			</span>
			<?php
		} );  
		
	}

	/**
	 * Footer Widgetized Area
	 *
	 * @return 	void 
	 */
	public static function footer_widgets_one() {
		get_template_part( 'views/footer/widgets', 'one' );
	}

	/**
	 * Footer Widgetized Area
	 *
	 * @return 	void 
	 */
	public static function footer_widgets_two() {
		get_template_part( 'views/footer/widgets', 'two' );
	}

	/**
	 * Footer Widgetized Area
	 *
	 * @return 	void 
	 */
	public static function footer_widgets_three() {
		get_template_part( 'views/footer/widgets', 'three' );
	}

	/**
	 * Footer Widgetized Area
	 *
	 * @return 	void 
	 */
	public static function footer_widgets_four() {
		get_template_part( 'views/footer/widgets', 'four' );
	}

	/**
	 * This function holds our footer widgets
	 *
	 * @since	1.5
	 * @version	3.5
	 *
	 * @return 	array
	 */
	public static function footer_widgets() {
		$defaults = array();
		$defaults['footer-1'] = array(
			'label'    => __( 'Footer One', 'wecodeart' ),
			'callback' => [ __CLASS__, 'footer_widgets_one' ]
		);
		$defaults['footer-2'] = array(
			'label'    => __( 'Footer Two', 'wecodeart' ),
			'callback' => [ __CLASS__, 'footer_widgets_two' ]
		);
		$defaults['footer-3'] = array(
			'label'    => __( 'Footer Three', 'wecodeart' ),
			'callback' => [ __CLASS__, 'footer_widgets_three' ]
		);
		$defaults['footer-4'] = array(
			'label'    => __( 'Footer Four', 'wecodeart' ),
			'callback' => [ __CLASS__, 'footer_widgets_four' ]
		);
		
		// New Modules
		$widgets = apply_filters( 'wecodeart/filter/footer/widgets', $defaults );

		return $widgets;
	}

	/**
	 * Return the Footer final widgets HTML with modules selected by user
	 *
	 * @uses	WeCodeArt\Utilities\Markup::wrap()
	 * @since	3.5
	 * @version 3.7.1
	 *
	 * @return 	void
	 */
	public static function render_widgets() {
		$wrappers = [
			[ 'tag' => 'div', 'attrs' => [ 'class' => 'footer__widgets' ] ],
			[ 'tag' => 'div', 'attrs' => [ 'class' => get_theme_mod( 'footer-layout-container' ) ] ],
			[ 'tag' => 'div', 'attrs' => [ 'class' => 'row pt-4' ] ]
		];

		Markup::wrap( 'footer-widgets', $wrappers, [ __CLASS__, 'sort_widgets' ] ); 
	}

	/**
	 * Return the Inner final HTML with modules selected by user for each page.
	 *
	 * @uses	WeCodeArt\Utilities\Markup::sortable()
	 * @since 	3.5
	 * @version	3.5
	 *
	 * @return 	void
	 */
	public static function sort_widgets() {
		Markup::sortable( self::footer_widgets(), get_theme_mod( 'footer-layout-modules' ) );
	}

	/**
	 * Register Sidebars Based on Active Options
	 *
	 * @since	unknown
	 * @version	3.7.0
	 *
	 * @return 	void
	 */
	public function register_sidebars() {
		// Get theme mod
		$options = get_theme_mod( 'footer-layout-modules', Customizer::get_defaults( 'footer-layout-modules' ) );

		// Get Default Footer Columns
		$columns = self::footer_widgets();
		$active = array();
		foreach( $options as $option ) if( array_key_exists( $option, $columns ) ) $active[] = $option;
		if( ! $active ) return;

		// Register Sidebar for each active footer columns
		foreach( $active as $sidebar ) {
			if( isset( $columns[$sidebar]['not_a_sidebar'] ) && $columns[$sidebar]['not_a_sidebar'] === true ) continue;
			register_sidebar( [
				'name'          => $columns[$sidebar]['label'], // @wpcs ok - translatable in $var
				'id'            => $sidebar,
				'before_widget' => '<div id="%1$s" class="widget %2$s">',
				'after_widget'  => '</div>',
				'before_title'  => '<h4 class="widget__title">',
				'after_title'   => '</h4>',
			] );
		}
	}
}