<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Core\Hooks
 * @copyright   Copyright (c) 2019, WeCodeArt Framework
 * @since 		3.0
 * @version		3.9.3
 */

namespace WeCodeArt\Core;

defined( 'ABSPATH' ) || exit(); 

use WeCodeArt\Core\Search;
use WeCodeArt\Utilities\Callbacks;
use WeCodeArt\Utilities\Markup\SVG;

/**
 * General Hooks
 */
class Hooks {

	use \WeCodeArt\Singleton;

	/**
	 * Send to Constructor
	 * @since 3.6.2
	 */
	public function init() {
		add_filter( 'body_class',		array( $this, 'body_classes'	) );
		add_filter( 'post_class',		array( $this, 'post_classes'	) );
		add_filter( 'get_custom_logo',	array( $this, 'custom_logo' 	) );
		add_filter( 'get_search_form',	array( $this, 'search_form' 	) );
	}
	
	/**
	 * Adds custom classes to the array of body classes.
	 *
	 * @param array $classes Classes for the body element.
	 * 
	 * @return array
	 */
	public function body_classes( $classes ) {
		$get_post_types = get_post_types( [ 'public' => true, 'publicly_queryable' => true ] );
		$has_sidebar 	= get_theme_mod( 'content-layout-modules' );
		$all_pages		= get_pages();

		// Add a class of hfeed to non-singular pages.
		if ( ! is_singular() ) {
			$classes[] = 'hfeed';
		}
		
		// Adds a class of group-blog to blogs with more than 1 published author.
		if ( is_multi_author() ) {
			$classes[] = 'group-blog';
		}
		
		// Page Has Sidebar
		foreach( $all_pages as $page ) { 
			if( is_page( $page->ID ) ) {
				$has_sidebar = get_theme_mod( 'content-layout-modules-page-' . $page->ID, $has_sidebar );
			}
		}
		
		// Blog Has Sidebar
		if( is_home() ) {
			$has_sidebar = get_theme_mod( 'content-layout-modules-blog' );
		}
		
		// CPTS Archive/Single 
		foreach( $get_post_types as $type ) { 
			if( is_post_type_archive( $type ) ) {
				$has_sidebar = get_theme_mod( 'content-layout-modules-' . $type . '-archive' );
			}
			if( is_singular( $type ) ){
				$has_sidebar = get_theme_mod( 'content-layout-modules-' . $type . '-singular' );
			}
		}

		// Add sidebar class
		if( in_array( 'primary', $has_sidebar ) || in_array( 'secondary', $has_sidebar ) ) {
			$classes[] = 'has-sidebar';
		} else {
			$classes[] = 'no-sidebar';
		}
		
		// Singular sidebar class if gutenberg wide/full layout 
		if( Callbacks::is_full_content() ) { 
			$classes = array_diff( $classes, [ 'has-sidebar' ] );
			$classes[] = 'gutenberg-disabled-sidebar'; 
			$classes[] = 'no-sidebar'; 
		} 

		// Return Classes
		$classes = array_map( 'sanitize_html_class', $classes );

		return $classes;
	}
	
	/**
	 * Filter the Custom Logo markup.
	 *
	 * @return html
	 */
	public function custom_logo() {
		$custom_logo_id = get_theme_mod( 'custom_logo' );
		$html = sprintf( '<a href="%1$s" class="custom-logo-link" rel="home" itemprop="url">%2$s</a>',
            esc_url( home_url( '/' ) ),
            wp_get_attachment_image( $custom_logo_id, 'full', false, [
				'class'	=> 'custom-logo',
				'alt'	=> get_bloginfo( 'name' )
			] )
        );
		
		return $html;	
	}
	
	/**
	 * Filter classes to the array of post classes.
	 *
	 * @param 	array $classes Classes for the post.
	 * 
	 * @return 	array
	 */
	public function post_classes( $classes ) {
		if ( is_admin() ) {
			return $classes;
		}
		
		// Add "entry" to the post class array
		$classes[] = 'entry';
		// Remove "hentry" from post class array
		$classes = array_diff( $classes, [ 'hentry' ] );
		
		return $classes;
	}
	
	/**
	 * Filter Search form HTML Markup.
	 * 
	 * @since 	unknown
	 * @version 3.9.3
	 * 
	 * @return 	string $form
	 */
	public function search_form() {
		/**
		 * Allow the default form args to be filtered.
		 *
		 * @since 3.9.3
		 *
		 * @param string The form args.
		 */
		$query_or_placeholder =  esc_attr( 
			apply_filters( 'the_search_query', get_search_query() ) 
		) ?: sprintf( __( 'Search this website %s', 'wecodeart' ), '&#x02026;' );

		$form = new Search( apply_filters( 'wecodeart/filter/search_form/args', [
			'input_text'	=> $query_or_placeholder,
			'button_label' 	=> SVG::compile( 'search' ),
		] ) );

		/**
		 * Allow the form output to be filtered.
		 *
		 * @since 3.9.3
		 *
		 * @param string The form markup.
		 */
		return apply_filters( 'wecodeart/filter/search_form/html', $form->get_form() );
	} 
}