<?php namespace WeCodeArt\Core;
// Exit if accessed directly
if ( ! defined( 'ABSPATH' ) ) exit();
// Use
use WeCodeArt\Core\Loops as Loops;
use WeCodeArt\Utilities\Markup as Markup;
use WeCodeArt\Utilities\Markup\SVG;

/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Entry Class
 * @copyright   Copyright (c) 2019, WeCodeArt Framework
 * @since 		v3.5
 * @version		v3.6.4
 */

class Entry {
	use \WeCodeArt\Singleton;

	/**
	 * Send to Constructor
	 * @since 3.6.2
	 */
	public function init() {
		add_action( 'wecodeart_entry_open',		[ $this, 'markup_open' 		], 5 ); 
		add_action( 'wecodeart_entry_header', 	[ $this, 'render_header' 	] ); 
		add_action( 'wecodeart_entry_content', 	[ $this, 'render_content' 	] );
		add_action( 'wecodeart_entry_footer',	[ $this, 'render_footer' 	] ); 
		add_action( 'wecodeart_entry_close', 	[ $this, 'markup_close' 	], 95 );
		
		add_action( 'wecodeart/hook/entry/header',	[ $this, 'render_title' 		], 10 );
		add_action( 'wecodeart/hook/entry/footer', 	[ $this, 'render_read_more' 	], 10 );
		add_action( 'wecodeart/hook/entry/footer', 	[ $this, 'render_author_box' 	], 20 );

		add_action( 'wecodeart/hook/loop/else', [ $this, 'render_noposts' ], 10 );

		add_action( 'the_password_form', [ $this, 'render_paswordprotected' ] );

		// Init Classes
		Entry\Meta::get_instance();
		Entry\Media::get_instance(); 
	}
	
	/**
	 * Entry Markup Open
	 * @since 	v1
	 * @version v3.6.3
	 * @return 	string HTML
	 */
	public function markup_open() { 
		$attributes = Markup::generate_attr( 'entry', [ 
			'id' 	=> 'entry-' . get_the_ID(), 
			'class'	=> implode( ' ', get_post_class() ) 
		] );
		?>
		<article <?php echo $attributes; ?>>
		<?php
	}

	/**
	 * Entry Markup Close
	 * @since 	v1
	 * @version v3.5
	 * @return 	string HTML
	 */
	public function markup_close() {
		?></article><?php
	} 

	/**
	 * Render Header
	 * @since 	v3.6.4
	 * @uses	Markup::wrap()
	 * @return 	string HTML
	 */
	public function render_header() { 

		Markup::wrap( 'entry-header', [ [
			'tag' 	=> 'header',
			'attrs' => [ 
				'class' => 'entry-header' 
			]
		] ], 'do_action', [ 'wecodeart/hook/entry/header' ] );  
	} 

	/**
	 * Render Footer
	 * @since 	v3.6.4
	 * @uses	Markup::wrap()
	 * @return 	string HTML
	 */
	public function render_footer() { 

		Markup::wrap( 'entry-footer', [ [
			'tag' 	=> 'footer',
			'attrs' => [ 
				'class' => 'entry-footer' 
			]
		] ], 'do_action', [ 'wecodeart/hook/entry/footer' ] );  
	} 

	/**
	 * Retrieve entry title with link
	 * @since 	3.6.4
	 * @param	bool	$link
	 * @param 	bool 	$echo 
	 */
	public function the_title( $link = true, $echo = true ) {
		$title = get_the_title();

		if ( 0 === mb_strlen( $title ) ) return;
		
		if ( $link && ! is_singular() ) {
			$title = sprintf( '<a href="%s" rel="bookmark">%s</a>', esc_url( get_permalink() ), esc_html( $title ) );
		}
		
		if( $echo !== true ) return $title;
		else echo $title;
	}

	/**
	 * Echo the Entry Title Markup
	 * @since 	1.0
	 * @uses	Markup::wrap()
	 * @version 3.6.4
	 */
	public function render_title() {  
		// Wrap in H1 on singular pages, else H2
		$wrap = is_singular() ? 'h1' : 'h2';

		Markup::wrap( 'entry-title', [ [
			'tag' 	=> $wrap,
			'attrs' => [ 
				'class' => 'entry-title' 
			]
		] ], [ $this, 'the_title' ] );  
	}  

	/**
	 * Echo the Entry Content/Excerpt Markup
	 * @since	1.0
	 * @uses	Markup::wrap()
	 * @version	3.6.4
	 */
	public function render_content() {  
		Markup::wrap( 'entry-content', [ [
			'tag' 	=> 'div',
			'attrs' => [ 
				'class' => is_singular() ? 'entry-content' : 'entry-excerpt' 
			]
		] ], is_singular() ? 'the_content' : 'the_excerpt' ); 
	} 

	/**
	 * Echo the post read more button. 
	 * @since 	unknown
	 * @version 3.6.4
	 */
	public function render_read_more() {
		// Do dont return on Singular
		if ( ! is_singular() ) echo Entry\Meta::read_more();
	}

	/**
	 * Return the content for No Posts
	 * @since	2.2
	 * @version	3.1.2
	 */
	public function render_noposts() {
		get_template_part( 'views/entry/content', 'none' );
	}

	/**
	 * Return the content for No Posts
	 * @since	3.5
	 * @version	3.5
	 */
	public function render_paswordprotected() {
		get_template_part( 'views/entry/content', 'protected' );
	}

	/**
	 * Add Author Box on single Post
	 * @since	3.5
	 * @version	3.5
	 */
	public function render_author_box() {
		// Filter to give posibility for disable
		if( apply_filters( 'wecodeart/filter/author-box/single', '__return_true' ) ) { 
			if( is_single() ) get_template_part( 'views/author/author' );
		}
	} 
}