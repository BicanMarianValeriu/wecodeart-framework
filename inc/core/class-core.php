<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Core
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since 		3.0
 * @version		5.0.0
 */

namespace WeCodeArt;

defined( 'ABSPATH' ) || exit(); 

use WeCodeArt\Singleton;
use WeCodeArt\Core\Search;
use WeCodeArt\Core\Content;
use WeCodeArt\Markup\SVG;
use WeCodeArt\Markup\Walkers\Menu;
use function WeCodeArt\Functions\get_prop;

/**
 * General Hooks
 */
class Core {

	use Singleton;

	/**
	 * Send to Constructor
	 *
	 * @since 3.6.2
	 */
	public function init() {
		add_filter( 'wp_nav_menu_args',	 		[ $this, 'menu_args' 		] );
		add_filter( 'body_class',				[ $this, 'body_classes' 	] );
		add_filter( 'get_custom_logo',			[ $this, 'custom_logo'		] );
		add_filter( 'get_search_form',			[ $this, 'search_form' 		] );
		add_filter( 'get_the_archive_title',	[ $this, 'archive_title' 	] );
		add_filter( 'excerpt_length',			[ $this, 'excerpt_length' 	] );

		Core\Scripts	::get_instance();
		Core\Header		::get_instance();
		Core\Content	::get_instance();
		Core\Entry		::get_instance();
		Core\Footer		::get_instance();
	}
	
	/**
	 * Filter the excerpt length.
	 *
	 * @since	5.0.0
	 *
	 * @param 	int 	$length
	 *
	 * @return 	string
	 */
	public function excerpt_length( $length ) {
		$custom = 30;
		if( $custom !== '' ) {
			$length = intval( $custom );
		}

		return $length;
	}

	/**
	 * Adds custom classes to the array of body classes.
	 *
	 * @version 4.0.6
	 *
	 * @param 	array 	$classes Classes for the body element.
	 *
	 * @return 	array
	 */
	public function body_classes( $classes ) {
		// Add a class of hfeed to non-singular pages.
		if ( ! is_singular() ) {
			$classes[] = 'hfeed';
		}
		
		// Adds a class of group-blog to blogs with more than 1 published author.
		if ( is_multi_author() ) {
			$classes[] = 'group-blog';
		}
		
		// Theme
		$classes[] = 'theme-' . wecodeart( 'name' );
		$classes[] = 'theme-is-' . strtolower( get_theme_mod( 'general-design-palette' ) );

		return $classes;
	}
	
	/**
	 * Adds Walker to WP Menus by default.
	 *
	 * @since 	4.0.5
	 * @version 5.0.0
	 *
	 * @param 	array 	$args.
	 *
	 * @return 	array
	 */
	public function menu_args( $args ) {
		return wp_parse_args( [
			'container' 	 => 'nav',
			'walker' 		 => new Menu,
			'fallback_cb'	 => 'WeCodeArt\Markup\Walkers\Menu::fallback'
		], $args );
	}
	
	/**
	 * Filter Search form HTML Markup.
	 * 
	 * @since 	unknown
	 * @version 3.9.5
	 * 
	 * @return 	string
	 */
	public function search_form() {
		/**
		 * Allow the default form args to be filtered.
		 *
		 * @since 	3.9.3
		 * @version	3.9.5
		 *
		 * @param string The form args.
		 */
		$query_or_placeholder = esc_attr(
			apply_filters( 'the_search_query', get_search_query() )
		) ?: sprintf( __( 'Search this website %s', 'wecodeart' ), '&#x02026;' );

		$form = new Search( apply_filters( 'wecodeart/filter/search_form/i18n', [
			'input'		=> $query_or_placeholder,
			'button'	=> SVG::compile( 'search' ),
		] ) );

		/**
		 * Allow the form output to be filtered.
		 *
		 * @since 3.9.3
		 *
		 * @param string The form markup.
		 */
		return apply_filters( 'wecodeart/filter/search_form/html', $form->get_form() );
	}

	/**
	 * Filter Custom Logo
	 * 
	 * @since  	5.0.0
	 * 
	 * @return 	string
	 */
	public function custom_logo( $html ) {
		$search 	= '/' . preg_quote( 'class="custom-logo-link', '/' ) . '/';
		$replace 	= 'class="navbar-brand d-block custom-logo-link';
		return preg_replace( $search, $replace, $html, 1 );
	}

	/**
	 * Archives Title
	 *
	 * @version	5.0.0
	 *
	 * @return 	string
	 */
	public function archive_title( $content ) {
		$output = sprintf( '<span class="archive-intro__svg">%s</span>', SVG::compile( 'folder' , [
			'class' => 'me-3'
		] ) );

		$title_template = '<span class="archive-intro__title">%s</span>';

		if ( is_search() ) {
			$output = sprintf( '<span class="archive-intro__svg">%s</span>', SVG::compile( 'search' , [
				'class' => 'me-3'
			] ) );
			$output .= sprintf( $title_template, sprintf( 
				esc_html__( 'Search Results for "%s".', 'wecodeart' ),
				'<span>' .  get_search_query() . '</span>' 
			) );
		} elseif ( is_category() ) {
			$output .= sprintf( $title_template, sprintf(
				esc_html__( 'Category Archives: %s', 'wecodeart' ),
				single_cat_title( '', false ) 
			) );
		} elseif ( is_tag() ) {
			$output .= sprintf( $title_template, sprintf(
				esc_html__( 'Tag Archives: %s', 'wecodeart' ),
				single_tag_title( '', false ) 
			) );
		} elseif( is_author() ) {
			$output .= sprintf( $title_template, sprintf(
				esc_html__( 'Author Archives: %s', 'wecodeart' ),
				get_the_author_meta( 'display_name' )
			) );
		} elseif ( is_year() ) {
			$output .= sprintf( $title_template, sprintf(
				esc_html__( 'Yearly Archives: %s', 'wecodeart' ), 
				get_the_date( _x( 'Y', 'yearly archives date format', 'wecodeart' ) ) 
			) );
		} elseif ( is_month() ) {
			$output .= sprintf( $title_template, sprintf(
				esc_html__( 'Monthly Archives: %s', 'wecodeart' ), 
				get_the_date( _x( 'F Y', 'monthly archives date format', 'wecodeart' ) ) 
			) );
		} elseif ( is_day() ) {
			$output .= sprintf( $title_template, sprintf(
				esc_html__( 'Daily Archives: %s', 'wecodeart' ),
				get_the_date()
			) );
		} elseif ( is_tax() ) {
			$output .= sprintf( esc_html__( '%s Archives', 'wecodeart' ), single_term_title( '', false ) );
		} elseif ( is_post_type_archive() ) {
			$output .= sprintf( $title_template, sprintf(
				esc_html__( 'Post Type Archives: %s', 'wecodeart' ), post_type_archive_title( '', false ) 
			) );
		} elseif ( is_home() ) {
			$output = sprintf( $title_template, esc_html__( 'Blog', 'wecodeart' ) );
		} else {
			$output .= esc_html__( 'Archives', 'wecodeart' );
		} 

		return $output;
	} 
}