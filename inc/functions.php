<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework 
 * @subpackage 	Functions
 * @copyright   Copyright (c) 2019, WeCodeArt Framework
 * @since		4.0.1
 */

namespace WeCodeArt\Functions;

defined( 'ABSPATH' ) || exit();

/**
 * Helper function to encode an array to an excaped json string
 * Useful to use it for placing encoded object in html attrs
 *
 * @since	3.5
 * @param 	array $json
 *
 * @return 	string 
 */
function toJSON( $json = array() ) {
    if( ! is_array( $json ) ) return null;
    $json = str_replace( '"', "'", json_encode( $json ) );
    return htmlspecialchars( $json, ENT_QUOTES, 'UTF-8' );
}

/**
 * Detect active plugin by constant, class or function existence.
 *
 * @since 	3.5
 * @param 	array 	$plugins 	Array of array for constants, classes and / or functions to check for plugin existence
 * 
 * @return 	boolean
 */
function detect_plugin( array $plugins ) {
    // Check for classes.
    if ( isset( $plugins['classes'] ) ) foreach ( $plugins['classes'] as $name ) if ( class_exists( $name ) ) return true;

    // Check for functions.
    if ( isset( $plugins['functions'] ) ) foreach ( $plugins['functions'] as $name ) if ( function_exists( $name ) ) return true;

    // Check for constants.
    if ( isset( $plugins['constants'] ) ) foreach ( $plugins['constants'] as $name ) if ( defined( $name ) ) return true;

    // No class, function or constant found to exist.
    return false;
}

/**
 * Trim CSS
 *
 * @since 	3.7.7
 * @param 	string $css CSS content to trim.
 *
 * @return 	string
 */
function trim_css( $css = '' ) {

    // Trim white space for faster page loading.
    if ( ! empty( $css ) ) {
        $css = preg_replace( '!/\*[^*]*\*+([^/][^*]*\*+)*/!', '', $css );
        $css = str_replace( [ "\r\n", "\r", "\n", "\t", '  ', '    ', '    ' ], '', $css );
        $css = str_replace( ', ', ',', $css );
    }

    return $css;
}

/**
 * Get a specific property of an array
 *
 * @since  	3.8.1
 *
 * @return null|string|mixed The value
 */
function get_prop( $array, $prop, $default = null ) {
    if ( ! is_array( $array ) && ! ( is_object( $array ) && $array instanceof ArrayAccess ) ) return $default; 
    if ( isset( $array[ $prop ] ) ) $value = $array[ $prop ];
    else $value = ''; 
    return empty( $value ) && null !== $default ? $default : $value;
}
    
/**
 * Kses SVG
 *
 * @param 	string 	$data
 *
 * @return 	string
 */
function kses_svg( string $data ) {
    return wp_kses( $data, [ 
        'svg' => [
            'class'  		=> true,
            'aria-hidden'  	=> true,
            'role' 			=> true,
            'focusable'    	=> true,
            'xmlns'    		=> true,
            'viewbox' 		=> true,
        ],
        'g' 	=> [],
        'path' 	=> [
            'd' 	=> true,
            'class' => true,
            'fill'	=> true
        ]
    ] );
}