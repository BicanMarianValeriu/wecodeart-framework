<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage  Support\Schema
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		5.0.0
 * @version		5.0.0
 */

namespace WeCodeArt\Support;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Integration;

/**
 * Class Starter
 */
class Schema implements Integration {

	use Singleton;

	/**
	 * Get Conditionals
	 *
	 * @return void
	 */
	public static function get_conditionals() {
		wecodeart( 'conditionals' )->set( [
			'with_schema' => Schema\Condition::class,
		] );
		
		return [ 'with_schema' ];
	}

	/**
	 * Send to Constructor
	 *
	 * @since 	5.0.0
	 * @version	5.0.0
	 */
	public function register_hooks() {
		// General
		\add_filter( 'wecodeart/filter/attributes/body', 	[ $this, 'body'		] );
		\add_filter( 'wecodeart/filter/attributes/header', 	[ $this, 'header' 	] );
		\add_filter( 'wecodeart/filter/attributes/footer', 	[ $this, 'footer' 	] );
		\add_filter( 'wecodeart/filter/attributes/comment',	[ $this, 'comment' 	] );
		\add_filter( 'wecodeart/filter/attributes/menu-item-wrap',		[ $this, 'navigation_menu' 	] );
		\add_filter( 'wecodeart/filter/attributes/pagination',			[ $this, 'navigation' 	], 10, 2 );
		\add_filter( 'wecodeart/filter/attributes/comments-nav',		[ $this, 'navigation' 	], 10, 2 );
		\add_filter( 'wecodeart/filter/attributes/entry-pagination',	[ $this, 'navigation' 	], 10, 2 );
		\add_filter( 'wecodeart/filter/attributes/entry-navigation',	[ $this, 'navigation'	], 10, 2 );
		
		foreach( apply_filters( 'wecodeart/filter/content/sidebars', [
			'primary'
		] ) as $key ) \add_filter( "wecodeart/filter/attributes/{$key}-sidebar",	[ $this, 'sidebar' 	] );
	}

	/**
	 * Generate Body Attrs
	 *
	 * @since 	3.5
	 * @version 5.0.0
	 *
	 * @param 	array $attrs
	 *
	 * @return 	array 
	 */
	public function body( $attrs ) {
		// Set up blog variable.
		$blog = ( is_home() || is_archive() || is_attachment() || is_tax() || is_single() ) ? true : false;
		// Set up default itemtype.
		$itemtype = 'WebPage';
		// Get itemtype for the blog.
		$itemtype = ( $blog ) ? 'Blog' : $itemtype;
		// Get itemtype for search results.
		$itemtype = ( is_search() ) ? 'SearchResultsPage' : $itemtype;

		$defaults = [
			'class'		=> implode( ' ', get_body_class() ),
			'itemscope' => true,
			'itemtype' 	=> 'https://schema.org/' . $itemtype
		];

		$attrs = wp_parse_args( $attrs, $defaults );

		return $attrs;
	}

	/**
	 * Header
	 *
	 * @since 	5.0.0
	 * @version	5.0.0
	 *
	 * @param 	array $attrs
	 *
	 * @return 	array
	 */
	public function header( $attrs ) {
		$attrs['itemscope'] = true;
		$attrs['itemtype'] 	= 'https://schema.org/WPHeader';
		return $attrs;
	}

	/**
	 * Footer
	 *
	 * @since 	5.0.0
	 * @version	5.0.0
	 *
	 * @param 	array $attrs
	 *
	 * @return 	array
	 */
	public function footer( $attrs ) {
		$attrs['itemscope'] = true;
		$attrs['itemtype'] 	= 'https://schema.org/WPFooter';
		return $attrs;
	}
	
	/**
	 * Sidebar
	 *
	 * @since 	5.0.0
	 * @version	5.0.0
	 *
	 * @param 	array $attrs
	 *
	 * @return 	array
	 */
	public function sidebar( $attrs ) {
		$attrs['itemscope'] = true;
		$attrs['itemtype'] 	= 'https://schema.org/WPSideBar';
		return $attrs;
	}

	/**
	 * Comment
	 *
	 * @since 	5.0.0
	 * @version	5.0.0
	 *
	 * @param 	array $attrs
	 *
	 * @return 	array
	 */
	public function comment( $attrs ) {
		$attrs['itemscope'] = true;
		$attrs['itemtype'] 	= 'https://schema.org/Comment';
		return $attrs;
	}

	/**
	 * Navigation
	 *
	 * @since 	5.0.0
	 * @version	5.0.0
	 *
	 * @param 	array $attrs
	 *
	 * @return 	array
	 */
	public function navigation( $attrs, $index ) {
		if( $index !== 0 ) return $attrs;
		return $this->navigation_menu( $attrs );
	}

	/**
	 * Navigation
	 *
	 * @since 	5.0.0
	 * @version	5.0.0
	 *
	 * @param 	array $attrs
	 *
	 * @return 	array
	 */
	public function navigation_menu( $attrs ) {
		$attrs['itemscope'] = true;
		$attrs['itemtype'] 	= 'https://schema.org/SiteNavigationElement';
		return $attrs;
	}
}
