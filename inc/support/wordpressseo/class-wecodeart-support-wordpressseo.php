<?php namespace WeCodeArt\Support;
// Exit if accessed directly.
if ( ! defined( 'ABSPATH' ) ) exit;
// Use
use WeCodeArt\Utilities\Markup;
use WeCodeArt\Utilities\Helpers;
use WeCodeArt\Core\Callbacks; 
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Integration\Yoast SEO
 * @since 		v3.5
 * @version		v3.5
 */
class WordPressSeo {
	/**
	 * Instance
	 *
	 * @access 	private
	 * @var 	object
	 */
	private static $instance;

	/**
	 * Initiator
	 */
	public static function get_instance() {
		if ( ! isset( self::$instance ) ) self::$instance = new self;
		return self::$instance;
	}

	public function __construct() {
		if( apply_filters( 'wecodeart/filter/support/breadcrumbs/woocommerce-yoast', true )
		&& Helpers::detectplugin( [ 'classes' => [ 'woocommerce' ] ] ) ) {
			remove_action( 'woocommerce_before_main_content', 'woocommerce_breadcrumb', 20, 0 );
		}

		add_action( 'wecodeart/hook/inner/top', [ $this, 'render_yoast_breadcrumbs' ], 30 );
	}

	/**
	 * Yoast BreadCrumbs
	 * @since   3.5
	 * @return  void
	 */
	public function render_yoast_breadcrumbs() {
		if( ! function_exists( 'yoast_breadcrumb' ) || Callbacks::_is_frontpage() ) return;

		$options = \WeCodeArt\Core\Content::get_contextual_options();  

		if( Helpers::detectplugin( [ 'classes' => [ 'woocommerce' ] ] ) ) {
			if( WooCommerce\Callbacks::_is_woocommerce_archive() === true ) {
				unset($options['container']);
				$options['container'] = get_theme_mod( 'content-layout-container-product-archive' ); 
			}
	
			if( is_product() ) {
				unset($options['container']);
				$options['container'] = get_theme_mod( 'content-layout-container-product-singular' ); 
			} 
		} 

		$wrappers = [
			[ 'tag' => 'div', 'attrs' => [ 'class' => 'breadcrumbs' ] ],
			[ 'tag' => 'div', 'attrs' => [ 'class' => $options['container'] ] ],
			[ 'tag' => 'div', 'attrs' => [ 'class' => 'grid-x grid-padding-x grid-padding-y' ] ],
			[ 'tag' => 'div', 'attrs' => [ 'class' => 'cell' ] ]
		];
		
		Markup::wrap( 
			'breadcrumbs', 	// Context
			$wrappers, 		// Wrappers
			// Function to wrap
			'yoast_breadcrumb',
			// Function Arguments
			[ '<div class="breadcrumbs__list">', '</div>' ]
		); 
	}
}