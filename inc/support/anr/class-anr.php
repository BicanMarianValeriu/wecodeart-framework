<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Support\ANR Captcha
 * @copyright   Copyright (c) 2019, WeCodeArt Framework
 * @since 		3.8.1
 * @version		4.0.8
 */

namespace WeCodeArt\Support;

defined( 'ABSPATH' ) || exit;

use anr_captcha_class as Captcha;
use WeCodeArt\Markup;
use WeCodeArt\Support\Interfaces\Integration;
use WeCodeArt\Support\ANR\Conditional\Plugin as ANR_Condition;
use WeCodeArt\Support\ANR\Conditional\Supported as ANR_Support;

/**
 * ANR Integration
 * @see https://wordpress.org/plugins/advanced-nocaptcha-recaptcha/
 */
class ANR implements Integration {

	use \WeCodeArt\Singleton;

	/**
	 * Send to Constructor
	 */
	public function init() {}

	/**
	 * Get Conditionals
	 *
	 * @return void
	 */
	public static function get_conditionals() {
		wecodeart( 'conditionals' )->set( [
			'has_anr_support'	=> ANR_Support::class,
			'is_anr_active'		=> ANR_Condition::class,
		] );

		return [ 'is_anr_active', 'has_anr_support' ];
	}

	/**
	 * Hooks
	 *
	 * @since   3.8.1
	 * @version	4.0.2
	 *
	 * @return  void
	 */
	public function register_hooks() {
		add_action( 'init', function() {
			$anr_instance = Captcha::init();

			if ( ! is_user_logged_in() ) {
				remove_action( 'comment_form_after_fields', 	[ $anr_instance, 'form_field' ], 99 );
				add_action( 'comment_form_after_fields', 		[ $this, 'wrapp_form_field' ] );
			} else {
				remove_filter( 'comment_form_field_comment', 	[ $anr_instance, 'comment_form_field' ], 99 );
				add_filter( 'comment_form_field_comment', 		[ $this, 'wrapp_comment_form_field' ] );
			}
		} );
	}

	/**
	 * Comment Captcha
	 *
	 * @since   3.8.1
	 * @version	4.0.8
	 * @see 	anr_captcha_form_field();
	 * @uses	anr_captcha_class::init()->form_field();
	 *
	 * @return  void
	 */
	public function wrapp_form_field() {
		Markup::wrap( 'comment-captcha', [ [ 
			'tag' => 'div', 
			'attrs' => [ 
				'class' => 'form-group comment-form-captcha col-12 col-md-7' 
			]
		] ], function() { ?>
			<label for="g-recaptcha-response"><?php esc_html_e( 'Captcha *', 'wecodeart' ); ?></label>
			<?php

			Captcha::init()->form_field(); // phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped

		} ); // Echoes the form_field().
	}

	/**
	 * Comment Captcha
	 *
	 * @since   3.8.1
	 * @version	4.0.8
	 * @see 	anr_captcha_class::init()->captcha_form_field();
	 * @uses	anr_captcha_class::init()->captcha_form_field();
	 *
	 * @return  void
	 */
	public function wrapp_comment_form_field( $defaults ) {
		$loggedin_hide = anr_get_option( 'loggedin_hide' );

		if ( is_user_logged_in() && $loggedin_hide  === (bool) true ) {
			return $defaults;
		}

		$defaults .= Markup::wrap( 'comment-captcha', [ [ 
			'tag' 	=> 'div', 
			'attrs' => [ 
				'class' => 'form-group comment-form-captcha col-12 col-md-7' 
			]
		] ], function() { ?>
			<label for="g-recaptcha-response"><?php esc_html_e( 'Captcha *', 'wecodeart' ); ?></label>
			<?php

			echo Captcha::init()->captcha_form_field(); // phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped
		
		}, [], false );

		return $defaults;
	}
}