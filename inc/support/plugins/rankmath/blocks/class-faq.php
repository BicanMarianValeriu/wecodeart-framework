<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  RankMath\Blocks
 * @copyright   Copyright (c) 2023, WeCodeArt Framework
 * @since		6.1.2
 * @version		6.1.2
 */

namespace WeCodeArt\Support\Plugins\RankMath\Blocks;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Blocks\Dynamic;

use function WeCodeArt\Functions\get_prop;
use function WeCodeArt\Functions\get_dom_element;
use function WeCodeArt\Functions\change_tag_name;
use function WeCodeArt\Functions\get_elements_by_class_name;

/**
 * Gutenberg RankMath FAQ block.
 */
class Faq extends Dynamic {

	use Singleton;

	/**
	 * Block namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'rank-math';

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'faq-block';

	/**
	 * Block args.
	 *
	 * @return 	array
	 */
	public function block_type_args(): array {
		return [
			'render_callback' => [ $this, 'render' ]
		];
	}

    /**
	 * Filter FAQ
	 * 
	 * @param 	string 	$attributes
	 * @param 	array 	$content
	 * 
	 * @return 	string
	 */
	public function render( array $attributes = [], string $content = '' ): string {
		$condition = ( get_prop( $attributes, [ 'listStyle' ] ) === '' && get_prop( $attributes, [ 'titleWrapper' ] ) === 'div' );
		
		if( $condition ) { // Apply only for default styleing with div titles (so we respect block settings).
			$dom		= $this->dom( $content );
			$sections	= get_elements_by_class_name( $dom, 'rank-math-faq-item' );
	
			if( count( $sections ) ) {
				foreach( $sections as $section ) {
					$section = change_tag_name( $section, 'details' );
					$summary = change_tag_name( get_elements_by_class_name( $section, 'rank-math-question', 'div', 0 ), 'summary' );
				}
			}

			$content	= new \WP_HTML_Tag_Processor( $dom->saveHtml() );
			$content->next_tag();
			$content->add_class( 'wp-block-details' );
		}

		return (string) $content;
	}

	/**
	 * Block styles
	 *
	 * @return 	string 	The block styles.
	 */
	public function styles(): string {
		return '
			.wp-block-details {
				--wp--faq--padding-y: 1rem;
				--wp--faq--padding-x: 2rem;
				--wp--faq--padding: var(--wp--faq--padding-y) var(--wp--faq--padding-x);
				--wp--faq--chevron-size: .4rem;
				--wp--faq--chevron-color: currentColor;
				--wp--faq--chevron-transition: .25s transform ease;
				--wp--faq--border: 1px solid var(--wp--preset--color--accent);
				border: var(--wp--faq--border);
			}
			.wp-block-details details + details {
				border-top: var(--wp--faq--border);
			}
			.wp-block-details summary {
				position: relative;
				display: block;
				padding: var(--wp--faq--padding);
				font-size: var(--wp--preset--font-size--normal);
				font-weight: 700;
				transition: background-color .5s ease-in-out;
				cursor: pointer;
			}
			.wp-block-details summary::before {
				content: "";
				position: absolute;
				top: calc(50% - var(--wp--faq--chevron-size));
				left: 1rem;
				border-width: var(--wp--faq--chevron-size);
				border-style: solid;
				border-color: transparent transparent transparent var(--wp--faq--chevron-color);
				transform: rotate(0);
				transform-origin: .125em 50%;
				transition: var(--wp--faq--chevron-transition);
			}
			.wp-block-details summary:hover,
			.wp-block-details summary:focus,
			.wp-block-details details[open] summary {
				background-color: var(--wp--preset--color--accent);
			}
			.wp-block-details details[open] summary {
				border-bottom: var(--wp--faq--border);
			}
			.wp-block-details details[open] > summary::before {
				transform: rotate(90deg);
			}
			.wp-block-details details summary::-webkit-details-marker {
				display: none;
			}
			.wp-block-details *[class*="-answer"] {
				padding: var(--wp--faq--padding);
				margin: 0;
			}
		';
	}
}
