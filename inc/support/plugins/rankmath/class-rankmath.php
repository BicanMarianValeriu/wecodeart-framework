<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Support\RankMath
 * @copyright   Copyright (c) 2023, WeCodeArt Framework
 * @since 		6.1.2
 * @version		6.1.5
 */

namespace WeCodeArt\Support\Plugins;

defined( 'ABSPATH' ) || exit;

use WeCodeArt\Singleton;
use WeCodeArt\Integration;
use WeCodeArt\Support\Plugins;
use WeCodeArt\Admin\Notifications;
use WeCodeArt\Admin\Notifications\Notification;
use function WeCodeArt\Functions\get_prop;

/**
 * RankMath Integration
 */
class RankMath implements Integration {

	use Singleton;

	/**
	 * Get Conditionals
	 *
	 * @return void
	 */
	public static function get_conditionals(): array {
		wecodeart( 'conditionals' )->register( 'is_rankmath_active', RankMath\Condition::class );
		
		return [ 'is_rankmath_active' ];
	}

	/**
	 * Send to Constructor
	 */
	public function register_hooks(): void {
		add_action( 'after_setup_theme', 						[ $this, 'register_blocks'		] );
		add_filter( 'wecodeart/filter/gutenberg/restricted',	[ $this, 'restricted_blocks' 	] );
		add_filter( 'wecodeart/filter/template/context', 		[ $this, 'post_category_view'	], 20, 2 );
	}

	/**
	 * Register Block Overwrites
	 *
	 * @return 	void
	 */
	public function register_blocks(): void {
		// Avoid overwriting content in admin.
		if( is_admin() ) return;

		// Register RankMath FAQ Overwrite
		wecodeart( 'blocks' )->register( 'rankmath/faq-block', RankMath\Blocks\FAQ::class );
	}

	/**
	 * Extend Category with RankMath's Primary Term
	 *
	 * @return 	array
	 */
	public function post_category_view( $args, $name ): array {
		if( $name !== 'blocks/post/terms.php' ) {
			return $args;
		}
		
		if( $meta = get_post_meta( get_prop( $args, 'post_id' ), 'rank_math_primary_category', true ) ) {
			$args['primary'] = (int) $meta;
		}

		return $args;
	}

	/**
	 * Filter - Restricted RankMath Blocks from theme code
	 *
	 * @return 	array
	 */
	public function restricted_blocks( $blocks ): array {
		$blocks = array_merge( $blocks, [
			'rank-math/rich-snippet',
		] );

		return $blocks;
	}

	/**
	 * Installer
	 *
	 * @since	6.1.2
	 * @version	6.1.2
	 *
	 * @return 	array
	 */
	public function installer(): array {
		return [
			'slug' 			=> null,
			'source'		=> 'custom',
			'title' 		=> 'Rank Math SEO',
			'description' 	=> Plugins::get_default_description( 'Rank Math SEO' ),
			'required' 		=> [ 'seo-by-rank-math' ]
		];
	}
}