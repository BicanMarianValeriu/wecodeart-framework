<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Support\Modules
 * @copyright   Copyright (c) 2023, WeCodeArt Framework
 * @since 		6.2.9
 * @version		6.3.0
 */

namespace WeCodeArt\Support;

defined( 'ABSPATH' ) || exit;

use WeCodeArt\Singleton;
use WeCodeArt\Integration;
use WeCodeArt\Admin\Installer\Module;
use WeCodeArt\Conditional\Traits\No_Conditionals;
use function WeCodeArt\Functions\get_prop;

/**
 * Modules
 */
final class Modules implements Integration {

	use Singleton;
	use No_Conditionals;

	CONST MODULES_CACHE_KEY = 'wecodeart/support/modules/check';

	/**
	 * Hooks
	 *
	 * @return  void
	 */
	public function register_hooks() {
		// Check modules for updates
		\add_action( 'init', [ $this, 'check_modules' ] );
		\add_filter( 'wecodeart/filter/support/plugins/admin', [ $this, 'extend_plugins' ] );
	}

	/**
	 * Extend plugins localize.
	 *
	 * @since   6.2.9
	 * @version	6.2.9
	 *
	 * @param 	array	$data
	 *
	 * @return	array
	 */
	public function extend_plugins( $data = [] ) {
		$installers = get_prop( wecodeart_config( 'installers' ), [ 'modules' ], [] );
		$installers = array_merge( get_prop( $data, [ 'installers' ], [] ), $installers );

		usort( $installers, function ( $a, $b ) {
			return ( $a['slug'] === null ) <=> ( $b['slug'] === null );
		} );

		return wp_parse_args( [
			'installers'	=> $installers,
			'modules'		=> wecodeart_option( 'installed_modules', [] ),
		], $data );
	}

	/**
	 * Check modules for updates.
	 *
	 * @since   6.2.9
	 * @version	6.2.9
	 *
	 * @return 	void
	 */
	public function check_modules() {
		$installed_modules  = wecodeart_option( 'installed_modules', [] );

        // Check for updates
		if ( false === ( get_transient( self::MODULES_CACHE_KEY ) ) ) {
			foreach( $installed_modules as $key => $module ) {
				$installer 		= new Module( $module );
				$current_ver	= get_prop( $module, [ 'version' ], '1.0.0' );
				$remote_ver 	= $installer->get_ver();
				
				if ( version_compare( $current_ver, $remote_ver, '<' ) ) {
					$installed_modules[$key]['hasUpdate'] = $remote_ver; 
				}
			}
			
			wecodeart_option( [
				'installed_modules' => $installed_modules
			] );

			set_transient( self::MODULES_CACHE_KEY, true, 12 * HOUR_IN_SECONDS );
		}
	}
}