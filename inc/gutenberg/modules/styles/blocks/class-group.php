<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg CSS Frontend
 * @copyright   Copyright (c) 2023, WeCodeArt Framework
 * @since		6.1.2
 * @version		6.1.2
 */

namespace WeCodeArt\Gutenberg\Modules\Styles\Blocks;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Modules\Styles\Processor;
use function WeCodeArt\Functions\get_prop;

/**
 * Block CSS Processor
 */
class Group extends Processor {
	/**
	 * Parses an output and creates the styles array for it.
	 *
	 * @return 	void
	 */
	protected function process_extra(): void {
		$classNames = explode( ' ', get_prop( $this->attrs, [ 'className' ], '' ) );

		if( in_array( 'is-style-marquee', $classNames, true ) ) {
			$declarations = [];
	
			$orientation 	= get_prop( $this->attrs, [ 'layout', 'orientation' ], 'horizontal' );
			$directionY 	= get_prop( $this->attrs, [ 'layout', 'verticalAlignment' ], 'center' );
			$directionX 	= get_prop( $this->attrs, [ 'layout', 'justifyContent' ], 'left' );
	
			// Handle orientation
			if( $orientation === 'vertical' ) {
				$declarations['--marquee-animation'] = 'marqueeY';
			}

			// Handle direction 
			if( ( $orientation === 'vertical' && $directionY === 'bottom' ) || ( $orientation === 'horizontal' && $directionX === 'right' ) ) {
				$declarations['--marquee-direction'] = 'reverse';
			}

			// Handle alternate
			if( ( $orientation === 'vertical' && $directionY === 'space-between' ) || ( $orientation === 'horizontal' && $directionX === 'space-between' ) ) {
				$declarations['--marquee-direction'] = 'alternate';
			}

			// Handle pause state
			if( ( $orientation === 'vertical' && $directionY === 'center' ) || ( $orientation === 'horizontal' && $directionX === 'center' ) ) {
				$declarations['--marquee-state'] = 'paused';
			}

			// Handle gap
			if( $blockGap = get_prop( $this->attrs, [ 'style', 'spacing', 'blockGap' ] ) ) {
				$declarations['--marquee-gap'] = wecodeart( 'styles' )::format_variable( $blockGap );
			}

			$declarations['justify-content'] = 'initial';
			$declarations['flex-wrap'] = 'nowrap';
	
			$this->add_declarations( $declarations );
		}
	}
}