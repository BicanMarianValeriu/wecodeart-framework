<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg CSS Frontend
 * @copyright   Copyright (c) 2022, WeCodeArt Framework
 * @since		5.0.0
 * @version		5.4.8
 */

namespace WeCodeArt\Gutenberg\Modules\Styles\Blocks;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Modules\Styles\Blocks as Base;
use function WeCodeArt\Functions\get_prop;

/**
 * Block CSS Processor
 */
class Image extends Base {
	/**
	 * Parses an output and creates the styles array for it.
	 *
	 * @return 	null
	 */
	protected function process_extra() {	
		$output 			= [];
		$output['element'] 	= $this->element;

		// Inline Style
		if( $css_style = get_prop( $this->attrs, 'style' ) ) {
			// Border
			if( $border = get_prop( $css_style, 'border', [] ) ) {
				if ( $value = get_prop( $border, 'radius' ) ) {
					if ( is_array( $value ) ) {
						// We have individual border radius corner values.
						foreach ( $value as $key => $radius ) {
							// Convert CamelCase corner name to kebab-case.
							$corner   = strtolower( preg_replace( '/(?<!^)[A-Z]/', '-$0', $key ) );
							$this->output[] = wp_parse_args( [
								'property' 	=> sprintf( 'border-%s-radius', $corner ),
								'value'	  	=> $radius,
							], $output );
						}
					} else {
						$this->output[] = wp_parse_args( [
							'property' 	=> 'border-radius',
							'value'	  	=> $value,
							'units'		=> is_numeric( $value ) ? 'px' : null
						], $output );
					}
				}
			}
		}
	}
}