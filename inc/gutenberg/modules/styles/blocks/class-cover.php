<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg CSS Frontend
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		4.2.0
 * @version		4.2.0
 */

namespace WeCodeArt\Gutenberg\Modules\Styles\Blocks;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Modules\Styles\Blocks as Base;
use function WeCodeArt\Functions\get_prop;

/**
 * Block CSS Processor
 */
class Cover extends Base {
	/**
	 * Parses an output and creates the styles array for it.
	 *
	 * @return 	null
	 */
	protected function process_attributes() {
		$this->output = [];
		
		$output 			= [];
		$output['element'] 	= $this->element;

		// Block Attributes
		if ( $value = get_prop( $this->attrs, 'minHeight', false ) ) {
			$this->output[] = wp_parse_args( [
				'property' 	=> 'min-height',
				'value'	  	=> $value,
				'units'		=> get_prop( $this->attrs, 'minHeightUnits', 'px' )
			], $output );
		}

		if ( $value = get_prop( $this->attrs, 'url', false ) ) {
			$this->output[] = wp_parse_args( [
				'property' 	=> 'background-image',
				'value'	  	=> $value,
			], $output );
		}

		if ( $value = get_prop( $this->attrs, 'focalPoint', false ) ) {
			$this->output[] = wp_parse_args( [
				'property' 	=> 'background-position',
				'value'	  	=> $value
			], $output );
		}

		if ( $value = get_prop( $this->attrs, 'customOverlayColor', false ) ) {
			$this->output[] = wp_parse_args( [
				'property' 	=> 'background-color',
				'value'	  	=> $value
			], $output );
		}

		if ( $value = get_prop( $this->attrs, 'customGradient', false ) ) {
			$element = get_prop( $this->attrs, 'url' ) ? [
				$this->element . '.has-background-gradient::before',
				$this->element . '>span[aria-hidden="true"]:first-child'
			] : $this->element . '.has-background-gradient';

			$this->output[] = wp_parse_args( [
				'element'	=> $element,
				'property' 	=> 'background-image',
				'value'	  	=> $value,
			], $output );
		}
	}
}