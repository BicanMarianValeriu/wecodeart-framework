<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg CSS Frontend
 * @copyright   Copyright (c) 2022, WeCodeArt Framework
 * @since		5.5.5
 * @version		5.5.5
 */

namespace WeCodeArt\Gutenberg\Modules\Styles\Blocks;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Gutenberg\Modules\Styles\Blocks as Base;
use function WeCodeArt\Functions\get_prop;

/**
 * Block CSS Processor
 */
class Gallery extends Base {
	/**
	 * Parses an output and creates the styles array for it.
	 *
	 * @return 	null
	 */
	protected function process_extra() {
		$output				= [];
		$output['element'] 	= $this->element;

		// Columns
		if( $columns = get_prop( $this->attrs, 'columns', 3 ) ) {
			$this->output[] = wp_parse_args( [
				'property' 	=> '--wp--columns',
				'value'	  	=> $columns
			], $output );
		}

		// Gap
		if( $gap = get_prop( $this->attrs, [ 'style', 'spacing', 'blockGap' ], '0px' ) ) {
			if ( is_array( $gap ) ) {
				$gap	= get_prop( $gap, [ 'top' ] );
			}

			$this->output[] = wp_parse_args( [
				'property' 	=> '--wp--style--block-gap',
				'value'	  	=> $gap
			], $output );

			// Unset default gap
			$this->output[] = wp_parse_args( [
				'property' 	=> 'gap',
				'value'	  	=> null
			], $output );
		}
	}
}