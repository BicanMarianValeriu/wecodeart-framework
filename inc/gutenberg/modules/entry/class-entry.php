<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Title
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		4.0.5
 * @version		5.0.0
 */

namespace WeCodeArt\Gutenberg\Modules;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Integration;
use WeCodeArt\Core\Content;
use WeCodeArt\Conditional\Traits\No_Conditionals;

/**
 * Handles Gutenberg Page Builder functionality.
 */
class Entry {

	use Singleton;
	use No_Conditionals;

	/**
	 * Class Init.
	 *
	 * @return void
	 */
	public function register_hooks() {
		// Post Meta
		$this->register_meta();
		
		// Body Class
		add_filter( 'body_class', [ $this, 'body_class' ] );
		// Hidden Singular Page Title
		add_filter( 'wecodeart/filter/entry/title/disabled', [ $this, 'disable_title' ], 10, 2 );
	}

	/**
	 * Register meta.
	 *
	 * @return 	void
	 */
	public function register_meta() {
		register_meta( 'post', '_wca_title_hidden', [
			'show_in_rest'  => true,
			'single'        => true,
			'type'          => 'boolean',
			'auth_callback' => function() {
				return current_user_can( 'edit_posts' );
			},
		] );

		register_meta( 'post', '_wca_builder_template', [
			'show_in_rest'  => true,
			'single'        => true,
			'type'          => 'boolean',
			'auth_callback' => function() {
				return current_user_can( 'edit_posts' );
			},
		] );

		register_meta( 'post', '_wca_content_modules', [
			'show_in_rest'  => true,
			'single'        => true,
			'type'  		=> 'array',
			// 'default'		=> get_theme_mod( 'content-layout-modules' ),
			'show_in_rest' 	=> [
				'schema' => [
					'type'  => 'array',
					'items' => [
						'type' => 'string',
					],
				]
			],
			'auth_callback' => function() {
				return current_user_can( 'edit_posts' );
			},
		] );
	}

	/**
	 * Maybe Disable Title
	 *
	 * @return 	bool
	 */
	public function disable_title( $disabled, $post_id ) {
		if( is_singular() && get_post_meta( $post_id, '_wca_title_hidden', true ) ) {
			$disabled = true;
		}
		
		return $disabled;
	}

	/**
	 * Replace title with blank
	 *
	 * @param 	array $classes The body classes.
	 *
	 * @return 	array Returns the new body classes.
	 */
	public function body_class( $classes ) {
		if ( is_admin() ) return $classes;

		
		if( is_singular() ) {			
			global $post;

			if ( is_page() ) {
				if ( get_post_meta( $post->ID, '_wca_builder_template', true ) ) {
					$classes[] = 'has-builder-template';
				}
			}

			if ( get_post_meta( $post->ID, '_wca_title_hidden', true ) ) {
				$classes[] = 'has-title-hidden';
			}
		}

		return $classes;
	}
}
