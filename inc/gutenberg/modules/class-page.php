<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Title
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		4.0.5
 * @version		4.0.5
 */

namespace WeCodeArt\Gutenberg\Modules;

defined( 'ABSPATH' ) || exit();

/**
 * Handles Gutenberg Page Builder functionality.
 */
class Page {

	use \WeCodeArt\Singleton;

	/**
	 * Class Init.
	 *
	 * @return void
	 */
	public function init() {
		// Post Meta
		add_action( 'init',	[ $this, 'register_meta' ] );

		// Body Class
		add_filter( 'body_class', [ $this, 'body_class' ] );
	}

	/**
	 * Register meta.
	 *
	 * @return 	void
	 */
	public function register_meta() {
		register_meta( 'post', '_wca_builder_template', [
			'show_in_rest'  => true,
			'single'        => true,
			'type'          => 'boolean',
			'auth_callback' => function() {
				return current_user_can( 'edit_posts' );
			},
		] );
	}

	/**
	 * Replace title with blank
	 *
	 * @param 	array $classes The body classes.
	 *
	 * @return 	array Returns the new body classes.
	 */
	public function body_class( $classes ) {
		if ( is_admin() ) return $classes;

		global $post;
		if ( is_page() && isset( $post->ID ) ) {
			$enabled = get_post_meta( $post->ID, '_wca_builder_template', true );

			if ( $enabled ) {
				$classes[] = 'page--full-width';
			}
		}

		return $classes;
	}
}
