<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg
 * @copyright   Copyright (c) 2019, WeCodeArt Framework
 * @since		4.0.3
 * @version		4.0.3
 */

namespace WeCodeArt\Gutenberg\Modules\Classes;

defined( 'ABSPATH' ) || exit();

/**
 * Handles Gutenberg Theme Custom Classes Functionality.
 */
class Columns {

	use \WeCodeArt\Singleton;

	/**
	 * Class Init.
	 *
	 * @return void
	 */
	public function init() {
		// Editor Class Settings.
		add_filter( 'wecodeart/filter/gutenberg/settings', [ $this, 'set_classes' ], 10, 2 );
		add_filter( 'wecodeart/filter/gutenberg/settings/columns_classes', [ $this, 'global_classes' ] );
		add_filter( 'wecodeart/filter/gutenberg/settings/columns_classes', [ $this, 'breakpoints_classes' ] );
	}

	/**
	 * Add new block editor settings for custom classes.
	 *
	 * @param array  $settings 	The editor settings.
	 * @param object $post 		The post being edited.
	 *
	 * @return array Returns updated editors customClasses settings.
	 */
	public function set_classes( $settings, $post ) {
		if ( ! isset( $settings[ 'columnsClasses' ] ) ) {
			$settings['columnsClasses'] = apply_filters( 'wecodeart/filter/gutenberg/settings/columns_classes', [], $post );
		}

		return $settings;
	}

	/**
	 * Add new block editor settings for custom classes.
	 *
	 * @param 	array  	$args
	 *
	 * @return 	array 	Returns updated editors settings.
	 */
	public function global_classes( $args ) {
		if( ! isset( $args['global'] ) ) {
			$args['global'] = [];

			foreach( range( 1, 12 ) as $number ) {
				$args['global'][] = 'col-'. $number;
			}
		}

		return $args;
	}

	/**
	 * Add new block editor settings for custom classes.
	 *
	 * @param 	array  	$args
	 *
	 * @return 	array 	Returns updated editors settings.
	 */
	public function breakpoints_classes( $args ) {
		foreach( ['sm', 'md', 'lg', 'xl'] as $breakpoint ) {
			if( ! isset( $args[$breakpoint] ) ) {
				$args[$breakpoint] = [];
				$args[$breakpoint][] = 'col-' . $breakpoint;
				foreach( range( 1, 12 ) as $number ) {
					$args[$breakpoint][] = 'col-'. $breakpoint . '-' . $number;
				}
			}
		}

		return $args;
	}
}
