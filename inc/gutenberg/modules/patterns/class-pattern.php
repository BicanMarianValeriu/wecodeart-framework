<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg Pattern
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		5.0.0
 * @version		5.0.0
 */

namespace WeCodeArt\Gutenberg\Modules\Patterns;

defined( 'ABSPATH' ) || exit();

/**
 * Class representing a block pattern.
 */
class Pattern {
    /**
	 * Namespace: wca
	 *
	 * @var string
	 */
    const NAMESPACE = 'wca';

	/**
	 * Template slug.
	 *
	 * @var string
	 */
	public $slug;

	/**
	 * Title.
	 *
	 * @var string
	 */
	public $title = '';

	/**
	 * Content.
	 *
	 * @var string
	 */
	public $content = '';

	/**
	 * Description.
	 *
	 * @var string
	 */
	public $description = '';

    /**
	 * Categories.
	 *
	 * @var array
	 */
	public $categories = [];

	/**
	 * Theme.
	 *
	 * @var string
	 */
	public $theme;

	/**
	 * Source of the content.
	 *
	 * @var string
	 */
	public $source = 'theme';

    /**
     * Register Template
     *
     * @return void
     */
    public function register() {
		if ( \WP_Block_Patterns_Registry::get_instance()->is_registered( self::NAMESPACE . '/' . $this->name ) ) return;
		
        register_block_pattern( self::NAMESPACE . '/' . sanitize_text_field( $this->name ), [
            'title'       => sanitize_text_field( $this->title ),
            'content'     => serialize_blocks( parse_blocks( $this->content ) ),
            'categories'  => ! empty( $this->categories ) ? array_map( 'sanitize_title', $this->categories ) : [ $this->theme ],
            'description' => sanitize_text_field( $this->description ),
        ] );
    }
}
