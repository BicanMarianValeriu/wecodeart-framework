<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		5.0.0
 * @version		5.0.0
 */

namespace WeCodeArt\Gutenberg\Blocks\Media;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Markup;
use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Blocks\Dynamic;
use function WeCodeArt\Functions\get_prop;

/**
 * Gutenberg Cover block.
 */
class Cover extends Dynamic {

	use Singleton;

	/**
	 * Block namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'core';

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'cover';

	/**
	 * Shortcircuit Register
	 */
	public function register() {
		add_filter( 'render_block_core/cover', [ $this, 'render' ], 10, 2 );
	}

	/**
	 * Dynamically renders the `core/cover` block.
	 *
	 * @param 	string 	$content 	The block markup.
	 * @param 	array 	$block 		The parsed block.
	 *
	 * @return 	string 	The block markup.
	 */
	public function render( $content = '', $block = [], $data = null ) {
		
		$attributes = get_prop( $block, 'attrs', [] );

		$container = [ 'wp-block-cover__inner-container' ];
		if( get_prop( $attributes, 'align', false ) === 'full' ) {
			$container[] = 'container-fluid';
		} else {
			$container[] = 'container';
		}

		$search 	= '/' . preg_quote( 'class="wp-block-cover__inner-container"', '/' ) . '/';
		$replace	= 'class="' . join( ' ', $container ) . '"';
		$content 	= preg_replace( $search, $replace, $content, 1 );

		return $content;
	}

	/**
	 * Block styles
	 *
	 * @return 	string 	The block styles.
	 */
	public function styles() {
		return '
		.wp-block-cover {
			position: relative;
			display: flex;
			justify-content: center;
			align-items: center;
			width: 100%;
			min-height: 350px;
			background-size: cover;
			background-position: center center;
			overflow: hidden;
		}
		.single-post .wp-block-cover {
			margin-bottom: 1rem;
		}
		.wp-block-cover.alignleft, wp-block-cover.alignright {
			margin-top: 0;
			margin-left: 0;
			margin-right: 0;
			float: none;
		}
		.wp-block-cover[class*="is-position-top"],
		.wp-block-cover[class*="-left"] .wp-block-cover__inner-container {
			align-items: flex-start;
		}
		.wp-block-cover[class*="is-position-center"],
		.wp-block-cover[class*="-center"] .wp-block-cover__inner-container {
			align-items: center;
		}
		.wp-block-cover[class*="is-position-bottom"],
		.wp-block-cover[class*="-right"] .wp-block-cover__inner-container {
			align-items: flex-end;
		}
		.wp-block-cover:after {
			content: "";
			display: block;
			font-size: 0;
			min-height: inherit;
		}
		.wp-block-cover__inner-container {
			z-index: 2;
		}
		.has-custom-content-position .wp-block-cover__inner-container {
			display: flex;
			flex-direction: column;
		}
		.wp-block-cover__image-background,
		.wp-block-cover__video-background {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			margin: 0;
			padding: 0;
			width: 100%;
			height: 100%;
			max-width: none;
			max-height: none;
			object-fit: cover;
			outline: none;
			border: none;
			box-shadow: none;
		}
		.wp-block-cover :is(p, ul, ol, hr, h1, h2, h3, h4, h5, h6):not(.has-text-color) {
			color: white;
		}
		@supports (position: sticky) {
			.wp-block-cover:after {
				content: none;
			}
		}
		';
	}
}
