<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2022, WeCodeArt Framework
 * @since		5.0.0
 * @version		5.5.8
 */

namespace WeCodeArt\Gutenberg\Blocks\Media;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Blocks\Dynamic;
use function WeCodeArt\Functions\get_prop;

/**
 * Gutenberg File block.
 */
class File extends Dynamic {

	use Singleton;

	/**
	 * Block namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'core';

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'file';

	/**
	 * Shortcircuit Register
	 */
	public function register() {
		\add_filter( 'block_type_metadata_settings', [ $this, 'filter_render' ], 10, 2 );
	}

	/**
	 * Filter Render
	 *
	 * @param	array 	$settings
	 * @param	array 	$data
	 */
	public function filter_render( $settings, $data ) {
		if ( $this->get_block_type() === $data['name'] ) {
			$settings = wp_parse_args( [
				'render_callback' => [ $this, 'render' ]
			], $settings );
		}
		
		return $settings;
	}

	/**
	 * Dynamically renders the `core/file` block.
	 *
	 * @param 	array 	$attributes The block attributes.
	 *
	 * @return 	string 	The block markup.
	 */
	public function render( $attributes = [], $content = '', $block = null ) {
		$exclude = [
			
		];

		$classes = explode( ' ', get_prop( $attributes, 'className', '' ) );

		$matched = array_intersect( $classes, $exclude );
		$ommited = array_diff( $classes, $exclude );

		$doc = $this->load_html( $content );

		// Wrapper Changes
		$wrapper	= $doc->getElementsByTagName( 'div' )->item(0);
		$classname 	= implode( ' ', array_merge( [ 'wp-block-file' ], array_filter( $ommited ) ) );
		
		$wrapper->setAttribute( 'class', $classname );
		
		// Button Changes
		$links	= $wrapper->getElementsByTagName( 'a' );
		foreach( $links as $link ) {
			if( $link->getAttribute( 'class' ) === 'wp-block-file__button' ) {
				$btn_class  = [ 'wp-block-button__link' ];
	
				if( ! empty( $matched ) ) {
					$btn_class = array_merge( $btn_class, $matched );
				}

				$link->setAttribute( 'class', join( ' ', $btn_class ) );
			} else {
				$link->setAttribute( 'class', 'wp-block-file__link' );
			}
		}

		return $this->save_html( $doc->saveHTML() );
	}

	/**
	 * Block styles
	 *
	 * @return 	string 	The block styles.
	 */
	public function styles() {
		$svg = 'data:image/svg+xml,%3Csvg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512"%3E%3Cpath fill="grey" d="M369.9 97.98L286.02 14.1c-9-9-21.2-14.1-33.89-14.1H47.99C21.5.1 0 21.6 0 48.09v415.92C0 490.5 21.5 512 47.99 512h288.02c26.49 0 47.99-21.5 47.99-47.99V131.97c0-12.69-5.1-24.99-14.1-33.99zM256.03 32.59c2.8.7 5.3 2.1 7.4 4.2l83.88 83.88c2.1 2.1 3.5 4.6 4.2 7.4h-95.48V32.59zm95.98 431.42c0 8.8-7.2 16-16 16H47.99c-8.8 0-16-7.2-16-16V48.09c0-8.8 7.2-16.09 16-16.09h176.04v104.07c0 13.3 10.7 23.93 24 23.93h103.98v304.01zM208 216c0-4.42-3.58-8-8-8h-16c-4.42 0-8 3.58-8 8v88.02h-52.66c-11 0-20.59 6.41-25 16.72-4.5 10.52-2.38 22.62 5.44 30.81l68.12 71.78c5.34 5.59 12.47 8.69 20.09 8.69s14.75-3.09 20.09-8.7l68.12-71.75c7.81-8.2 9.94-20.31 5.44-30.83-4.41-10.31-14-16.72-25-16.72H208V216zm42.84 120.02l-58.84 62-58.84-62h117.68z"%3E%3C/path%3E%3C/svg%3E';
		
		return "
		.wp-block-file {
			position: relative;
			display: flex;
			align-items: center;
			margin-bottom: 1rem;
		}
		.wp-block-file::before {
			content: '';
			display: block;
			width: 1.5em;
			height: 1em;
			margin-right: .5em;
			background-image: url('$svg');
			background-size: contain;
			background-repeat: no-repeat;
			background-position: center;
		}
		.wp-block-file .wp-block-button__link {
			margin-left: 1rem;
		}
		";
	}
}
