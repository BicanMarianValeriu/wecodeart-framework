<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2022, WeCodeArt Framework
 * @since		5.3.5
 * @version		5.3.5
 */

namespace WeCodeArt\Gutenberg\Blocks\Query;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Blocks\Dynamic;
use function WeCodeArt\Functions\get_prop;

/**
 * Gutenberg Query Pattern block.
 */
class Pattern extends Dynamic {

	use Singleton;

    /**
	 * Block namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'core';

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'pattern';

	/**
	 * Shortcircuit Register
	 */
	public function register() {
		\add_filter( 'render_block_core/' . $this->block_name , [ $this, 'render' ] );
	}

	/**
	 * Dynamically renders the `core/pattern` block.
	 *
	 * @param 	array 	$content 	The block content.
	 *
	 * @return 	string 	The block markup.
	 */
	public function render( $content = '' ) {
        $content = wptexturize( $content );
		$content = convert_smilies( $content );
		$content = shortcode_unautop( $content );
		$content = wp_filter_content_tags( $content );
		$content = do_shortcode( $content );
	
		// Handle embeds.
		global $wp_embed;
		$content = $wp_embed->autoembed( $content );
	
		return $content;
	}
}
