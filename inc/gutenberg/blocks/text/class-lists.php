<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2023, WeCodeArt Framework
 * @since		5.7.2
 * @version		5.7.2
 */

namespace WeCodeArt\Gutenberg\Blocks\Text;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Blocks\Dynamic;

/**
 * Gutenberg Code block.
 */
class Lists extends Dynamic {

	use Singleton;

	/**
	 * Block namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'core';

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'list';

	/**
	 * Init.
	 */
	public function init() {
		\add_filter( 'register_block_type_args', [ $this, 'register_args' ], 20, 2 );
	}

	/**
	 * Block args
	 *
	 * @param	array 	$args
	 * @param	string 	$block_name
	 *
	 * @return 	array
	 */
	public function register_args( array $args, string $block_name ): array {
		if ( $this->get_block_type() === $block_name ) {
			$args['supports']['spacing'] = [
				'margin'  	=> true,
				'padding' 	=> true,
				'blockGap' 	=> true,
			];
			$args['supports']['__experimentalLayout'] = [
				'allowSwitching'  => false,
				'allowInheriting' => false,
				'default'         => [
					'type'        => 'flex',
					'orientation' => 'vertical',
				],
			];
		}
		
		// List Item Block
		if ( $block_name === 'core/list-item' ) {
			$args['supports']['color'] = [
				'text'       => true,
				'background' => true,
				'link'       => true,
				'gradient'   => true,
			];
			$args['supports']['spacing'] = [
				'padding' => true,
				'margin'  => true,
			];
			$args['supports']['__experimentalBorder'] = [
				'radius'                        => true,
				'width'                         => true,
				'color'                         => true,
				'style'                         => true,
				'__experimentalDefaultControls' => [
					'width' => true,
					'color' => true,
				],
			];
		}

		return $args;
	}

	/**
	 * Block styles
	 *
	 * @return 	string 	The block styles.
	 */
	public function styles() {
		return "
			/* Reset */
			ol,
			ul {
				padding-left: 1.1em;
			}
			ol,
			ul,
			dl {
				margin-top: 0;
				margin-bottom: var(--wp--style--block-gap);
			}
			ol ol,
			ul ul,
			ol ul,
			ul ol {
				margin-bottom: 0;
			}
			dt {
				font-weight: 700;
			}
			dd {
				margin-bottom: .5rem;
				margin-left: 0;
			}
		";
	}
}
