<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2022, WeCodeArt Framework
 * @since		5.3.3
 * @version		5.5.8
 */

namespace WeCodeArt\Gutenberg\Blocks\Comment;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Blocks\Dynamic;
use WeCodeArt\Gutenberg\Blocks\Comment\Template;
use function WeCodeArt\Functions\get_prop;

/**
 * Gutenberg Pagination Numbers block.
 */
class Numbers extends Dynamic {

	use Singleton;

	/**
	 * Block namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'core';

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'comments-pagination-numbers';

	/**
	 * Shortcircuit Register
	 */
	public function register() {
		\add_filter( 'block_type_metadata_settings', [ $this, 'filter_render' ], 10, 2 );
	}

	/**
	 * Filter template markup
	 *
	 * @param	array 	$settings
	 * @param	array 	$data
	 */
	public function filter_render( $settings, $data ) {
		if ( $this->get_block_type() === $data['name'] ) {
			$settings = wp_parse_args( [
				'render_callback' => [ $this, 'render' ]
			], $settings );
		}
		
		return $settings;
	}

	/**
	 * Dynamically renders the `core/comments-pagination-numbers` block.
	 *
	 * @param 	array 	$attributes The block attributes.
	 *
	 * @return 	string 	The block markup.
	 */
	public function render( $attributes = [], $content = '', $block = null ) {
		// Get the post ID from which comments should be retrieved.
		$post_id = get_prop( $block->context, [ 'postId' ], get_the_id() );

		if ( ! $post_id ) {
			return '';
		}

		// Get the what we need.
		$comment_vars 	= build_comment_query_vars_from_block( $block );
		$total   		= ( new WP_Comment_Query( $comment_vars ) )->max_num_pages;
		$current 		= ! empty( $comment_vars['paged'] ) ? $comment_vars['paged'] : null;

		return wecodeart( 'markup' )::wrap( 'wp-block-' . $this->block_name, [ [
			'tag' 	=> 'div',
			'attrs' => $this->get_block_wrapper_attributes()
		] ], 'paginate_comments_links', [
			'total'     => $total,
			'current'   => $current,
			'prev_next' => false,
		], false );
	}

	/**
	 * Block styles
	 *
	 * @return 	string 	The block styles.
	 */
	public function styles() {
		return "";
	}
}
