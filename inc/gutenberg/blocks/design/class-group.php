<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2023, WeCodeArt Framework
 * @since		5.7.2
 * @version		5.7.2
 */

namespace WeCodeArt\Gutenberg\Blocks\Design;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Blocks\Dynamic;
use function WeCodeArt\Functions\get_prop;
use function WeCodeArt\Functions\dom_element;
use function WeCodeArt\Functions\get_dom_element;

/**
 * Gutenberg Group blocks.
 */
class Group extends Dynamic {

	use Singleton;

	/**
	 * Block namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'core';

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'group';

	/**
	 * Block args.
	 *
	 * @return 	array
	 */
	public function block_type_args(): array {
		return [
			'render_callback' => [ $this, 'render' ]
		];
	}

	/**
	 * Dynamically renders the `core/group` block.
	 *
	 * @param 	string 	$attributes 	The block attrs.
	 * @param 	string 	$content 		The block markup.
	 *
	 * @return 	string 	The block markup.
	 */
	public function render( array $attributes = [], string $content = '' ): string {
		$content 	= new \WP_HTML_Tag_Processor( $content );

		static $processed = null;

		// Handle <main /> tag (once).
		if( $content->next_tag( [ 'tag_name' => 'main' ] ) && is_null( $processed ) ) {
			$content->set_attribute( 'class', 'wp-site-main ' . $content->get_attribute( 'class' ) );
			$processed = true;
		}

		// Handle marquee group.
		if ( get_prop( $attributes, [ 'layout', 'orientation' ] ) === 'marquee' ) {
			$dom 	= $this->dom( (string) $content );
			$div 	= get_dom_element( 'div', $dom );
			$gap 	= get_prop( $attributes, [ 'style', 'spacing', 'blockGap' ] );
			$wrap	= $dom->createElement( 'div' );

			$wrap->setAttribute( 'class', 'wp-block-group__marquee' );

			if( $gap ) {
				$wrap->setAttribute( 'style', '--marquee-gap:' . wecodeart( 'styles' )::format_variable( $gap ) );
			}
			
			$count 	= $div->childNodes->count();
			for ( $i = 0; $i < $count; $i++ ) {
				$item = $div->childNodes->item( $i );

				if ( ! $item || ! method_exists( $item, 'setAttribute' ) ) {
					continue;
				}

				$wrap->appendChild( $item );

				for ( $j = 0; $j < 2; $j++ ) {
					$clone = dom_element( $item->cloneNode( true ) );

					if ( ! $clone ) {
						continue;
					}

					$clone->setAttribute( 'aria-hidden', 'true' );
					$classes   = explode( ' ', $clone->getAttribute( 'class' ) );
					$classes[] = 'is-cloned';
					$clone->setAttribute( 'class', implode( ' ', $classes ) );
					$wrap->appendChild( $clone );
				}
			}

			$div->insertBefore( $wrap, $div->firstChild );

			$content = $dom->saveHTML();
		}
	
		return (string) $content;
	}

	/**
	 * Block styles
	 *
	 * @return 	string 	The block styles.
	 */
	public function styles() {
		$mobile 	= wecodeart_json( [ 'settings', 'custom', 'mobileBreakpoint' ], 'lg' );
		$breakpoint = wecodeart_json( [ 'settings', 'custom', 'breakpoints', $mobile ], '992px' );

		$inline = "
		.is-marquee .wp-block-group__marquee {
			display: flex;
			overflow: hidden;
			user-select: none;
			gap: var(--marquee-gap, var(--wp--style--block-gap));
			width: 100%;
			max-width: 100vw;
			min-width: 100%;
		}
		.is-marquee .wp-block-group__marquee > * {
			position: relative;
			flex-shrink: 0;
			min-height: 1em;
			transform: translateX(0);
			animation-name: marquee;
			animation-duration: var(--marquee-speed-mobile, 25s);
			animation-timing-function: linear;
			animation-iteration-count: infinite;
			animation-direction: var(--marquee-direction, forwards);
		}
		.is-marquee:is(:hover,:focus,:focus-within) .wp-block-group__marquee > * {
			animation-play-state: paused;
		}
		@media (min-width: {$breakpoint}) {
			.is-marquee .wp-block-group__marquee > * {
				animation-duration: var(--marquee-speed-desktop, 50s);
			}
		}
		@media (prefers-reduced-motion) {
			.is-marquee .wp-block-group__marquee > * {
				animation-play-state: paused;
			}
		}
		@keyframes marquee {
			0% {
				transform: translateX(0);
			}
			100% {
				transform: translateX(calc(-100% - var(--wp--style--block-gap)));
			}
		}
		";

		return $inline;
	}
}
