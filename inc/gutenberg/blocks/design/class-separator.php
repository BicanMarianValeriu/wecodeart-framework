<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2022, WeCodeArt Framework
 * @since		5.0.0
 * @version		5.6.1
 */

namespace WeCodeArt\Gutenberg\Blocks\Design;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Blocks\Dynamic;
use function WeCodeArt\Functions\get_prop;

/**
 * Gutenberg Separator block.
 */
class Separator extends Dynamic {

	use Singleton;

	/**
	 * Block namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'core';

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'separator';

	/**
	 * Shortcircuit Register
	 */
	public function register() {
		\register_block_style( $this->get_block_type(), [
			'name' 			=> 'faded',
            'label'			=> esc_html__( 'Faded', 'wecodeart' ),
			'inline_style' 	=> self::get_style( 'faded' )
		] );
	}

	/**
	 * Get Block styles
	 *
	 * @return 	string 	The block styles.
	 */
	public static function get_style( $class = 'faded' ) {
		$inline = '';

		switch( $class ) :
			case 'dots' :
				$inline = '
					.wp-block-separator.is-style-dots {
						--wp--separator-gap: 2em;
						--wp--separator-icon: "\00b7 \00b7 \00b7";
						background: none !important;
						height: auto;
						line-height: 1;
						text-align: center;
					}
					.wp-block-separator.is-style-dots::before {
						content: var(--wp--separator-icon);
						color: currentColor;
						font-size: 1.5rem;
						letter-spacing: var(--wp--separator-gap);
						padding-left: var(--wp--separator-gap);
						font-family: serif;
					}
				';
				break;
			case 'faded' :
				$inline = "
					.wp-block-separator.is-style-faded {
						background: linear-gradient(to right, rgba(255,255,255,0), currentColor, rgba(255,255,255,0))!important;
						width: initial!important;
					}
				";
				break;
			default :
				break;
		endswitch;

		return wecodeart( 'styles' )::compress( $inline );
	}

	/**
	 * Block styles
	 *
	 * @return 	string 	The block styles.
	 */
	public function styles() {
		$inline = '
		.wp-block-separator {
			margin-left: auto;
			margin-right: auto;
		}
		.wp-block-separator.is-style-default,
		.wp-block-separator:not([class*="is-style-"]) {
			max-width: 100px;
		}
		';

		$inline .= self::get_style( 'dots' );

		return $inline;
	}
}
