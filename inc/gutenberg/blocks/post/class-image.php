<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		5.0.0
 * @version		5.0.0
 */

namespace WeCodeArt\Gutenberg\Blocks\Post;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Markup;
use WeCodeArt\Singleton;
use WeCodeArt\Core\Media;
use WeCodeArt\Gutenberg\Blocks\Dynamic;
use function WeCodeArt\Functions\get_prop;

/**
 * Gutenberg Post Image block.
 */
class Image extends Dynamic {

	use Singleton;

	/**
	 * Block namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'core';

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'post-featured-image';

	/**
	 * Shortcircuit Register
	 */
	public function register_block_type() {
		add_filter( 'block_type_metadata_settings', [ $this, 'filter_render' ], 10, 2 );
	}

	/**
	 * Filter table markup
	 *
	 * @param	array 	$settings
	 * @param	array 	$data
	 */
	public function filter_render( $settings, $data ) {
		if ( $this->get_block_type() === $data['name'] ) {
			$settings = wp_parse_args( [
				'render_callback' => [ $this, 'render' ]
			], $settings );
		}
		
		return $settings;
	}

	/**
	 * Dynamically renders the `core/post-featured-image` block.
	 *
	 * @param 	array 	$attributes The block attributes.
	 *
	 * @return 	string 	The block markup.
	 */
	public function render( $attributes = [], $content = '', $block = null ) {
		if ( ! isset( $block->context['postId'] ) ) {
			return '';
		}
	
		$post_ID	= $block->context['postId'];
		$link 		= get_prop( $attributes, 'isLink', false );
		$classnames = [ 'wp-block-featured-image', 'ratio', 'overflow-hidden' ];

		if( $link ) {
			$classnames = array_diff( $classnames, [ 'ratio', 'overflow-hidden' ] );
			$filter = function( $wrappers ) use ( $post_ID ) {
				$wrappers = array_merge( $wrappers, [
					[
						'tag' 	=> 'a',
						'attrs'	=> [
							'href' 	=> get_permalink( $post_ID ),
							'class'	=> 'd-block ratio overflow-hidden',
						]
					]
				] );

				return $wrappers;
			};

			add_filter( 'wecodeart/filter/wrappers/get-media', $filter );
		}

		$image = Media::get_image( [
			'media_id' 	=> get_the_post_thumbnail( $post_ID ),
			'size'		=> 'wca_featured',
			'attrs' 	=> [
				'class' => implode( ' ', $classnames )
			]
		] );

		if( $link ) {
			remove_filter( 'wecodeart/filter/wrappers/get-media', $filter );
		}

		return $image;
	}
}
