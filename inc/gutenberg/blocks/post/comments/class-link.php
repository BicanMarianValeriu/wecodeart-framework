<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		5.0.0
 * @version		5.0.0
 */

namespace WeCodeArt\Gutenberg\Blocks\Post\Comments;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Markup;
use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Blocks\Dynamic;
use function WeCodeArt\Functions\get_prop;

/**
 * Gutenberg Site Date block.
 */
class Link extends Dynamic {

	use Singleton;

	/**
	 * Shortcircuit Register
	 */
	public function register_block_type() {
		add_filter( 'block_type_metadata_settings', [ $this, 'filter_render' ], 10, 2 );
	}

	/**
	 * Filter table markup
	 *
	 * @param	array 	$settings
	 * @param	array 	$data
	 */
	public function filter_render( $settings, $data ) {
		if ( 'core/post-comments-link' !== $data['name'] ) {
			return $settings;
		}

		return wp_parse_args( [
			'render_callback' => [ $this, 'render' ]
		], $settings );
	}

	/**
	 * Dynamically renders the `core/post-comments-link` block.
	 *
	 * @param 	array 	$attributes The block attributes.
	 *
	 * @return 	string 	The block markup.
	 */
	public function render( $attributes = [], $content = '', $block = null ) {
		if (
			! isset( $block->context['postId'] ) ||
			isset( $block->context['postId'] ) &&
			! comments_open( $block->context['postId'] )
		) {
			return '';
		}

		$args = [
			'post_id' 		=> $block->context['postId'],
			'attributes' 	=> $attributes,
			'number'		=> (int) get_comments_number( $block->context['postId'] ),
		];
		
		return wecodeart_template( 'entry/meta/comments', $args, false );
	}
}
