<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2022, WeCodeArt Framework
 * @since		5.0.0
 * @version		5.5.8
 */

namespace WeCodeArt\Gutenberg\Blocks\Post;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Gutenberg\Blocks\Dynamic;
use function WeCodeArt\Functions\get_prop;

/**
 * Gutenberg Post Content block.
 */
class Content extends Dynamic {

	use Singleton;

	/**
	 * Block namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'core';

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'post-content';

	/**
	 * Shortcircuit Register
	 */
	public function register() {
        \add_filter( 'wp_link_pages_link',  	 		[ $this, 'wp_link_pages_link' 	] );
		\add_filter( 'wp_link_pages_args',   			[ $this, 'wp_link_pages_args' 	] );
		\add_filter( 'the_password_form',				[ $this, 'the_password_form' 	] );
		\add_filter( 'block_type_metadata_settings', 	[ $this, 'filter_render' ], 10, 2 );
	}

	/**
	 * Filter block markup
	 *
	 * @param	array 	$settings
	 * @param	array 	$data
	 */
	public function filter_render( $settings, $data ) {
		if ( $this->get_block_type() === $data['name'] ) {
			$settings = wp_parse_args( [
				'render_callback' => [ $this, 'render' ]
			], $settings );
		}
		
		return $settings;
	}

	/**
	 * Dynamically renders the `core/post-content` block.
	 *
	 * @param 	array 	$attributes The block attributes.
	 *
	 * @return 	string 	The block markup.
	 */
	public function render( $attributes = [], $content = '', $block = null ) {
		static $seen_ids = array();

		if ( ! isset( $block->context['postId'] ) ) {
			return '';
		}

		$post_id = $block->context['postId'];

		if ( isset( $seen_ids[ $post_id ] ) ) {
			$is_debug = defined( 'WP_DEBUG' ) && WP_DEBUG && defined( 'WP_DEBUG_DISPLAY' ) && WP_DEBUG_DISPLAY;

			return $is_debug ? esc_html__( '[block rendering halted]', 'wecodeart' ) : '';
		}

		$seen_ids[ $post_id ] = true;

		if ( ! in_the_loop() && have_posts() ) {
			the_post();
		}

		$content = get_the_content();

		// Check for nextpage to display page links for paginated posts.
		if ( has_block( 'core/nextpage' ) ) {
			$content .= wp_link_pages( [ 'echo' => 0 ] );
		}
		
		/**
		 * This filter is documented in wp-includes/post-template.php 
		 */
		$content = apply_filters( 'the_content', str_replace( ']]>', ']]&gt;', $content ) );
		unset( $seen_ids[ $post_id ] );

		if ( empty( $content ) ) {
			return '';
		}

		return wecodeart( 'markup' )::wrap( 'wp-block-post-content', [
			[
				'tag' 	=> 'div',
				'attrs' => $this->get_block_wrapper_attributes()
			]
		], $content, [], false );
	}

    /**
     * WP-Link Pages for paginated posts
     *
     * @since	unknown
     * @version 5.2.2
     *
     * @return  array
     */
    public function wp_link_pages_args( $args ) {
        return wp_parse_args( [
            'before'        => '<nav class="pagination pagination--entry mb-3">',
            'after'         => '</nav>',
            'link_before'   => '<span class="pagination__link">',
            'link_after'    => '</span>',
            'echo'          => false,
        ], $args );
    }

    /**
     * WP-Link Pages link
     *
     * @since	5.0.0
     * @version 5.2.2
     *
     * @return  string
     */
    public function wp_link_pages_link( $link ) {
        $link = str_replace( 'post-page-numbers', 'pagination__item', $link );
        $link = str_replace( 'current', 'pagination__item--current', $link );
		
        return $link;
    }

	/**
	 * Return the content for No Posts
	 *
	 * @since	3.5
	 * @version	5.1.8
	 *
	 * @return 	string
	 */
	public function the_password_form( $template ) {
		$template = wecodeart_template( 'general/protected', [
			'action' => home_url( 'wp-login.php?action=postpass', 'login_post' )
		], false );

		$template = trim( preg_replace( '/\s+/', ' ', $template ) );
		$template = preg_replace( '/>\s*</', '><', $template );

		return $template;
	}
}
