<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		4.2.0
 * @version		4.2.0
 */

namespace WeCodeArt\Gutenberg\Blocks;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Singleton;
use WeCodeArt\Core\Content as Inner;
use function WeCodeArt\Functions\get_prop;

/**
 * Gutenberg Abstract block.
 */
class Content extends Dynamic {

	use Singleton;

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'content';

	/**
	 * Append frontend scripts when rendering the block.
	 *
	 * @param   array|\WP_Block $attributes Block attributes, or an instance of a WP_Block. Defaults to an empty array.
	 * @param   string          $content    Block content. Default empty string.
	 * @return  string Rendered block type output.
	 */
	public function render( $attributes = [], $content = '' ) {
		$closure = function( $args ) use( $attributes ) {
			$class = [
				'wp-block-wca-content',
				$args[0]['attrs']['class']
			];

			if( get_prop( $attributes, 'backgroundColor', false ) ) {
				$class[] = 'bg-' . $attributes['backgroundColor'];
			}

			if( get_prop( $attributes, 'className', false ) ) {
				$class[] = $attributes['className'];
			}

			if( get_prop( $attributes, 'align', false ) ) {
				$class[] = 'align' . $attributes['align'];
				$args[1]['attrs']['class'] = 'container-fluid';
			}

			$args[0]['attrs']['class'] = implode( ' ', $class );
			
			return $args;
		};

		add_filter( 'wecodeart/filter/wrappers/content-wrappers', $closure );
		ob_start();
		Inner::get_instance()::render_modules();
		$content = ob_get_clean();
		remove_filter( 'wecodeart/filter/wrappers/content-wrappers', $closure );

		return $content;
	}

	/**
	 * Get block attributes.
	 *
	 * @return 	array
	 */
	protected function get_attributes() {
		$block_json = file_get_contents( get_parent_theme_file_path( '/src/js/gutenberg/blocks/content/block.json' ) );
		$block_json = $block_json ? json_decode( $block_json, true ) : [];

		return array_merge( parent::get_attributes(), get_prop( $block_json, 'attributes', [] ) );
	}
}
