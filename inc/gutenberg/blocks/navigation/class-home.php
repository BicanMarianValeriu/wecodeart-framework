<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		5.0.0
 * @version		5.0.0
 */

namespace WeCodeArt\Gutenberg\Blocks\Navigation;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Markup;
use WeCodeArt\Singleton;
use WeCodeArt\Support\Styles;
use WeCodeArt\Gutenberg\Blocks\Dynamic;
use WeCodeArt\Gutenberg\Blocks\Navigation;
use function WeCodeArt\Functions\get_prop;

/**
 * Gutenberg Navigation Home Link block.
 */
class Home extends Dynamic {

	use Singleton;

	/**
	 * Block namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'core';

	/**
	 * Block name.
	 *
	 * @var string
	 */
	protected $block_name = 'home-link';

	/**
	 * Shortcircuit Register
	 */
	public function register() {
		add_filter( 'block_type_metadata_settings', [ $this, 'filter_render' ], 10, 2 );
	}

	/**
	 * Filter table markup
	 *
	 * @param	array 	$settings
	 * @param	array 	$data
	 */
	public function filter_render( $settings, $data ) {
		if ( $this->get_block_type() === $data['name'] ) {
			$settings = wp_parse_args( [
				'render_callback' => [ $this, 'render' ]
			], $settings );
		}
		
		return $settings;
	}

	/**
	 * Dynamically renders the `core/navigation-link` block.
	 *
	 * @param 	array 	$attributes The block attributes.
	 *
	 * @return 	string 	The block markup.
	 */
	public function render( $attributes = [], $content = '', $block = null ) {
		// Don't render the block's subtree if it has no label.
		if ( empty( $attributes['label'] ) ) {
			return '';
		}
		
		$classes		= [ 'wp-block-navigation-link', 'wp-block-navigation-link--home', 'nav-item' ];
		$class_name 	= ! empty( $attributes['className'] ) ? implode( ' ', (array) $attributes['className'] ) : false;

		// Fallback - to do, if styles extension is disabled.
		$inline_style 	= '';

		if ( false !== $class_name ) {
			$classes[] = $class_name;
		}

		return Markup::wrap( 'nav-item', [ [
			'tag' 	=> 'li',
			'attrs'	=> [
				'class'	=> join( ' ', $classes ),
				'style'	=> $inline_style,
			]
		] ], function( $attributes ) {
			$is_active 	= is_front_page();
			$classes 	= [ 'wp-block-navigation-link__content', 'nav-link' ];

			if( $is_active ) {
				$classes[] = 'active';
			}

			// Nav Link
			Markup::wrap( 'nav-link', [ [
				'tag' 	=> 'a',
				'attrs'	=>	[
					'class' 		=> join( ' ', $classes ),
					'href'			=> esc_url( trailingslashit( home_url() ) ),
					'aria-current'	=> $is_active ? 'page' : null,
				],
			] ], function( $attributes ) {
				// Label
				Markup::wrap( 'nav-label', [ [
					'tag' 	=> 'span',
					'attrs'	=> [
						'class' => 'wp-block-navigation-link__label'
					]
				] ], function( $attributes ) {
					// Removed redundant isset() since we already checking for empty above
					// So is pointless to double check here, off course isset if it passes that
					echo wp_kses( $attributes['label'], [
						'code'   => [],
						'em'     => [],
						'img'    => [
							'scale' => [],
							'class' => [],
							'style' => [],
							'src'   => [],
							'alt'   => [],
						],
						's'      => [],
						'span'   => [
							'style' => [],
						],
						'strong' => [],
					] );
				}, [ $attributes ] );
			}, [ $attributes ] );
		}, [ $attributes ], false );
	}
}