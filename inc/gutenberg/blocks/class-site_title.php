<?php
/**
 * WeCodeArt Framework
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package		WeCodeArt Framework
 * @subpackage  Gutenberg\Blocks
 * @copyright   Copyright (c) 2021, WeCodeArt Framework
 * @since		5.0.0
 * @version		5.0.0
 */

namespace WeCodeArt\Gutenberg\Blocks;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Markup;
use WeCodeArt\Markup\SVG;
use WeCodeArt\Singleton;
use function WeCodeArt\Functions\get_prop;

/**
 * Gutenberg Site_Title block.
 */
class Site_Title extends Dynamic {

	use Singleton;

	/**
	 * Shortcircuit Register
	 */
	public function register_block_type() {
		add_filter( 'block_type_metadata_settings', [ $this, 'filter_render' ], 10, 2 );
	}

	/**
	 * Filter file markup
	 *
	 * @param	string 	$block_content
	 * @param	array 	$block
	 */
	public function filter_render( $args, $meta ) {		
		if ( 'core/site-title' !== $meta['name'] ) {
			return $args;
		}

		$args['render_callback'] = [ $this, 'render' ];

		return $args;
	}

	/**
	 * Dynamically renders the `core/file` block.
	 *
	 * @param 	array 	$attributes The block attributes.
	 *
	 * @return 	string 	The block markup.
	 */
	public function render( $attributes = [], $content = '' ) {
		$content = Markup::template( 'header/branding', [
			'toggle' => get_theme_mod( 'header-bar-toggle' )
		], false );

		return $content;
	}
}
