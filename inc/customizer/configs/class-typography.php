<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Customizer\Configs\Typography
 * @copyright   Copyright (c) 2020, WeCodeArt Framework
 * @since		4.2.0
 * @version		4.2.0
 */

namespace WeCodeArt\Customizer\Configs;

defined( 'ABSPATH' ) || exit;

use WeCodeArt\Customizer\Config;
use WeCodeArt\Customizer\Formatting;

/**
 * Customizer Config Typography setup
 */
class Typography extends Config {
	/**
	 * Register Site Layout Customizer Configurations
	 *
	 * @param 	array                $configurations 
	 * @param 	WP_Customize_Manager $wp_customize instance of WP_Customize_Manager.
	 * @since 	3.6
	 *
	 * @return 	array 
	 */
	public function register( $configurations, $wp_customize ) {
		// A handy class for formatting theme mods.
		$formatting = Formatting::get_instance();

		$_configs = array(
			array(
				'name'     => 'typography-fonts',
				'type'     => 'section',
				'priority' => 10,
				'title'    => esc_html__( 'Fonts', 'wecodeart' ),
				'panel'    => 'typography',
			),
			array(
				'name'			=> 'typography-fonts-primary',
				'type' 			=> 'control',
				'control'  		=> 'wecodeart-fonts',
				'section'		=> 'typography-fonts',
				'title' 		=> esc_html__( 'Primary Font', 'wecodeart' ),
				'description' 	=> esc_html__( 'This font is used on body and will be placed in Boostrap`s sans serif CSS variable.', 'wecodeart' ),
				'priority' 		=> 5,
				'transport'		=> 'postMessage'
			),
			// array(
			// 	'name'			=> 'typography-fonts-fallback',
			// 	'type' 			=> 'control',
			// 	'control'  		=> 'wecodeart-fonts',
			// 	'section'		=> 'typography-fonts',
			// 	'title' 		=> esc_html__( 'Fallback Font', 'wecodeart' ),
			// 	'description' 	=> esc_html__( 'Choose fallback font.', 'wecodeart' ),
			// 	'priority' 		=> 10,
			// 	'input_attrs' 	=> [
			// 		'system' => true,
			// 	],
			// 	'transport'		=> 'postMessage'
			// ),
		);

		return array_merge( $configurations, $_configs );
	}
}
