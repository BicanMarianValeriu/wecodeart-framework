<?php
/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt Framework
 * @subpackage 	Conditional
 * @copyright   Copyright (c) 2022, WeCodeArt Framework
 * @since 		4.0
 * @version		5.5.5
 */

namespace WeCodeArt;

defined( 'ABSPATH' ) || exit();

use WeCodeArt\Config\Interfaces\Configuration;

/**
 * Conditional.
 *
 * @author     Bican Marian Valeriu <marianvaleriubican@gmail.com>
 */
class Conditional implements Configuration {

    use Singleton;

    /**
     * All of the conditional items.
     *
     * @var array
     */
    protected $items = [];

    /**
     * Create a new conditional repository.
     *
     * @param  array  $items
     *
     * @return void
     */
    public function init() {
        foreach( apply_filters( 'wecodeart/filter/conditionals', [
			'is_theme_admin'    => Conditional\Settings::class,
			'is_front_page'     => Conditional\Front::class,
            'is_dev_mode'       => Conditional\Debug::class,
		] ) as $key => $condition ) {
            $this->register( $key, $condition );
        }
    }
	
    /**
     * Set a given conditional value.
     *
     * @param  array|string  $key
     * @param  mixed   $value
     *
     * @return void
     */
    public function register( $key, $value = null ) {
        return $this->set( $key, $value );
    }

    /**
     * Set a given conditional value.
     *
     * @param  array|string  $key
     * @param  mixed   $value
     *
     * @return void
     */
    public function set( $key, $value = null ) {
        $keys = is_array( $key ) ? $key : [ $key => $value ];

        foreach ( $keys as $key => $value ) {
            $this->items[$key] = apply_filters( "wecodeart/conditional/set/{$key}", $value );
        }
    }

    /**
     * Determine if the given conditional value exists.
     *
     * @param  string  $key
     *
     * @return bool
     */
    public function has( $key ) {
        return isset( $this->items[$key] );
    }

    /**
     * Get the specified conditional value.
     *
     * @param  string  $key
     * @param  mixed   $default
     *
     * @return mixed
     */
    public function get( $key, $default = null ) {
        if ( ! isset( $this->items[$key] ) ) {
            return $default;
        }

        return apply_filters( "wecodeart/conditional/get/{$key}", $this->items[$key] );
    }

    /**
     * Removes integration from the container.
     *
     * @param  string  $key
     *
     * @return bool
     */
    public function forget( $key ) {
		unset( $this->items[$key] );
    }

    /**
     * Get all of the conditional items for the application.
     *
     * @return array
     */
    public function all() {
        return $this->items;
    }
}