/**
 * WeCodeArt Framework.
 *
 * WARNING: This file is part of the core WeCodeArt Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package 	WeCodeArt FrameWork
 * @subpackage 	Admin/Notifications
 * @copyright   Copyright (c) 2025, WeCodeArt Framework
 * @since 		3.8.1
 * @version		6.1.2
 */

import './../../../scss/admin/notification/index.scss';

const Notification = {
    init() {
        document.addEventListener('click', (e) => {
            const { target } = e;
            const noticeId = target.closest('.wca-notice')?.dataset?.id ?? '';
            if (target.matches('[data-dismiss]')) {
                this.dismissNew(e, noticeId);
            } else if (target.classList.contains('notice-dismiss')) {
                this.dismiss(e, noticeId);
            }
        });
    },
    dismiss(e, noticeId) {
        e.preventDefault();
        this.ajax(noticeId);
    },
    dismissNew(e, noticeId) {
        e.preventDefault();
        const { target } = e;
        const el = target.closest('.wca-notice');
        
        this.ajax(noticeId);
        el.parentNode.removeChild(el);

        const link = target.getAttribute('href') ?? '';
        const _target = target.getAttribute('target') ?? '';
        link && _target === '_blank' && window.open(link, '_blank');
    },
    ajax(noticeId) {
        if (noticeId === '') {
            return;
        }
        const notices = [...document.querySelectorAll('.wca-notice')];
        const container = notices.filter(({ dataset: { id = '' } = {}}) => id == noticeId).pop();
        const { nonce = '' } = container?.dataset || {};

        fetch(ajaxurl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
            },
            body: `action=wca_dismiss_notification&notification=${encodeURIComponent(noticeId)}&nonce=${encodeURIComponent(nonce)}`,
        });
    },
};

document.addEventListener('DOMContentLoaded', () => {
    Notification.init();
});