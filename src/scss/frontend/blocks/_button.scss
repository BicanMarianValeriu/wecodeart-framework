.wp-block-buttons {
	display: inline-flex;
	flex-flow: row wrap;
	
	&.is-style-default {
		margin: 0 -5px;

		> .wp-block-button {
			flex-grow: 0;
			padding: 0 5px;
			margin-bottom: 1rem;
		}
	}

	&.is-style-group {
		vertical-align: middle;

		> .wp-block-button {
			// Prevent double borders when buttons are next to each other
			&:not(:first-child) {
				margin-left: -$btn-border-width;
			}

			// Reset rounded corners
			&:not(:last-child) > .wp-block-button__link {
				@include border-right-radius(0);
			}

			&:not(:first-child) > .wp-block-button__link {
				@include border-left-radius(0);
			}
		}
	}

	&.is-style-vertical,
	&.is-style-group-vertical {
		flex-direction: column;
	}

	&.is-style-group-vertical {
		align-items: flex-start;
		justify-content: center;
		margin-bottom: 1rem;

		& > .wp-block-button {
			width: 100%;
			margin-bottom: 0;

			// Prevent double borders when buttons are next to each other
			&:not(:first-child) {
				margin-top: -$btn-border-width;
			}

			// Reset rounded corners
			&:not(:last-child) > .wp-block-button__link {
				@include border-bottom-radius(0);
			}

			&:not(:first-child) > .wp-block-button__link {
				@include border-top-radius(0);
			}

			&__link {
				display: block;
				width: 100%;
			}
		}
	}

	> .wp-block-button {
		position: relative;
		flex: 1 1 auto;
		margin-bottom: 1rem;

		@include hover() {
			z-index: 1;
		}

		&__link {	  
			&:focus,
			&:active,
			&.active {
				z-index: 1;
			}
		}
	}
}

.wp-block-button {
	color: $white;

	&.aligncenter {
		text-align: center;
	}

	&.alignright {
		/*rtl:ignore*/
		text-align: right;
	}

	&__link {
		display: block;
		user-select: none;
		outline: none;
		font-weight: $btn-font-weight;
		@include button-variant( $dark, $gray-200 );
		@include button-size(
			$btn-padding-y,
			$btn-padding-x-lg,
			$btn-font-size,
			$btn-line-height,
			$btn-border-radius
		);

		&.no-border-radius {
			@include border-radius(0);
		}

		@each $color, $value in $theme-colors {
			&.has-#{$color}-background-color {
				&:hover {
					color: white;
					background-color: darken( $value, 10% );
				}
			}
		}
	
		.is-style-outline & {
			background-color: transparent;
			border: $input-btn-border-width solid currentColor;

			&:not(.has-text-color) {
				color: $dark;
			}

			@each $color, $value in $theme-colors {
				&.has-#{$color}-color {
					&:hover,
					&:visited {
						color: #{$value};
					}
				}

				&.has-#{$color}-color {
					&:hover {
						color: white;
						background-color: #{$value};
					}
				}
			}
		}
	}
}