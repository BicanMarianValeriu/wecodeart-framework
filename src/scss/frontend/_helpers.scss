// Frontend Only
:where(.theme-wecodeart) {
    // Borders
    :where(.has-border-color,[style*=border-width]) {
        border-style: solid
    }
    
    :where([style*=border-top-color],[style*=border-top-width]) {
        border-top-style: solid
    }

    :where([style*=border-left-color],[style*=border-left-width]) {
        border-left-style: solid
    }
    
    :where([style*=border-right-color],[style*=border-right-width]) {
        border-right-style: solid
    }
    
    :where([style*=border-bottom-color],[style*=border-bottom-width]) {
        border-bottom-style: solid
    }

    // Transitions
    .fade {
        @include transition($transition-fade);

        &:not(.show) {
            opacity: 0;
        }
    }

    .collapse {
        &:not(.show) {
            display: none;
        }
    }

    .collapsing {
        height: 0;
        overflow: hidden;
        @include transition($transition-collapse);

        &.collapse-horizontal {
            width: 0;
            height: auto;
            @include transition($transition-collapse-width);
        }
    }
}

// Background Dim
.has-background-dim {
    --wp--bg--opacity: 0.5;

    @for $i from 0 through 10 {
        &-#{ $i * 10 } {
            --wp--bg--opacity: #{$i * 0.1};
        }
    }
}

// Text
.has-text-align-left {
    text-align: left;
}

.has-text-align-center {
    text-align: center;
}

.has-text-align-right {
    text-align: right;
}

.has-text-align-justify {
    text-align: justify;
}

.has-underline {
    text-decoration: underline;
}

.text-truncate {
    @include text-truncate();
}

.initialism {
	font-size: var(--wp--preset--font-size--small);
	text-transform: uppercase;
}

.small {
    @extend small;
}

.mark {
    @extend mark;
}

.display-1,
.display-2,
.display-3,
.display-4,
.display-5,
.display-6 {
    font-weight: 300;
    line-height: 1.2;
}

@for $i from 1 through 6 {
	.display-#{$i} {
		font-size: var(--wp--custom--display--#{$i});
	}
}

// List
.list-unstyled {
	@include list-unstyled();
}

// SVG
.svg-inline {
    display: inline-block;
    vertical-align: -0.125em;
    height: 1em;

    .fa-secondary {
        opacity: .4;
    }

    &.fa-fw {
        width: 1em;
    }
}

// Clearfix
.clearfix {
    @include clearfix();
}

// Visually hidden
.visually-hidden,
.visually-hidden-focusable:not(:focus):not(:focus-within) {
    @include visually-hidden();
}

.screen-reader-text {
    position: absolute;
    background-color: var(--wp--preset--color--light);
    color: var(--wp--preset--color--dark);
    padding: .5rem 1rem;
    top: 5px;
    left: 5px;
    z-index: 100000;

    @include visually-hidden-focusable();
}

// Stacks
.hstack {
    display: flex;
    flex-direction: row;
    align-items: center;
    align-self: stretch;
}
  
.vstack {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    align-self: stretch;
}

// Vertical Line
.vr {
    display: inline-block;
    background-color: currentColor;
    width: 1px;
    min-height: 1em;
    opacity: .25;
}

// Position
.fixed-top {
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    z-index: 1030;
}
  
.fixed-bottom {
    position: fixed;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1030;
}
  
// Responsive sticky top
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .sticky#{$infix}-top {
            position: sticky;
            top: 0;
            z-index: 1020;
        }
    }
}