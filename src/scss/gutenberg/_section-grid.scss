$block-padding: 14px;
$grid-desktop: repeat(12, 1fr); // Same as 12 instances of 1fr.
$grid-tablet: repeat(8, 1fr);
$grid-mobile: repeat(4, 1fr);

$grid-gutter: 1px;

// Standard Gutenberg Breakpoints
$break-huge: 1440px;
$break-wide: 1280px;
$break-xlarge: 1080px;
$break-large: 960px;	// admin sidebar auto folds
$break-medium: 782px;	// adminbar goes big
$break-small: 600px;
$break-mobile: 480px;
$break-zoomed-in: 280px;

/**
 * Visual grid overlay
 */
.wp-block-wca-layout {
	position: relative;
	display: flex;
	flex-direction: column;
	overflow: hidden;

	&--tablet {
		.wca-overlay-grid,
		.wca-resize-grid,
		> .block-editor-inner-blocks > .block-editor-block-list__layout {
			grid-template-columns: $grid-tablet;
		}
	}

	&--mobile {
		.wca-overlay-grid,
		.wca-resize-grid,
		> .block-editor-inner-blocks > .block-editor-block-list__layout {
			grid-template-columns: $grid-mobile;
		}
	}

	.wp-block-wca-section {
		margin-top: 0;
		margin-bottom: 0;

		& > .block-editor-inner-blocks > .block-editor-block-list__layout {
			// Prevent long unbroken words from overflowing.
			word-break: break-word; // For back-compat.
			overflow-wrap: break-word; // New standard.
			// Reset inherited negative margins.
			// These margins are in the block editor to compensate for the 14px block padding on all blocks.
			// They don't play well with CSS Grid, so we reset them, and re-apply them later.
			margin-left: 0;
			margin-right: 0;
		
			// Every block, including nested blocks, are born with an intrinsic minimum margin.
			// This resets that for the containers, which aren't meant to have that intrinsically.
			> .wp-block > .block-editor-block-list__block-edit > [data-block] {
				margin-top: 0;
				margin-bottom: 0;
			}
		
			.wp-block {
				max-width: 100%;
			}
		}
	}

	.wp-block-wca-column {
		margin: 0;
	}
}

.wca-overlay-grid {
	// The following rules are for Safari.
	// A CSS grid rendering issue means the child nodes of this grid
	// won't stretch to fit the vertical space, unless the position
	// property is changed from absolute, to something else, and back.
	// By being relative when unselected and absolute when selected, we
	// constantly "refresh" this hack.
	position: relative;
	
	.is-selected &,
	.has-child-selected & {
		position: absolute;
	}

	top: 0;
	left: 0; // -$grid-gutter;
	right: 0; // -$grid-gutter;
	bottom: 0;
	display: grid;
	grid-gap: $grid-gutter;
	grid-template-columns: $grid-desktop;
	color: rgba(0,0,0,0.1);
	// Lower the z-index so it's under the block borders.
	z-index: 0;

	&--no-gutters {
		left: 15px;
		right: 15px;
	}

	// Colorize for dark themes also.
	.is-dark-theme & {
		color: rgba(255,255,255,0.15);
	}

	// Solid gutter shading.
	.wca-overlay-grid__column {
		transition: border .4s ease;

		// Default gutter.
		.is-selected &,
		.has-child-selected & {
			box-shadow: -($grid-gutter / 2) 0 0 0 currentColor, ($grid-gutter / 2) 0 0 0 currentColor;
		}
	}
}

// /**
//  * Resize Handles
//  */
// .wp-block-wca-layout__resize-handle,
// .wp-block-wca-column__resize-handles {
// 	.components-resizable-box__container {
// 		position: relative;
// 		user-select: auto;
// 		width: auto;
// 		box-sizing: border-box;
// 	}

// 	.components-resizable-box__handle {
// 		position: absolute;
// 		user-select: none;
// 		cursor: col-resize;
// 	}
// }

// .wp-block-wca-layout__resize-handle {
// 	position: absolute;
// 	left: 0;
// 	top: 0;
// 	height: 100%;
// }

// [data-type="wca/section"],
// [data-type="wca/column"] {
// 	&.is-selected {
// 		.wp-block-wca-column__resize-handles {
// 			.components-resizable-box__handle {
// 				display: none;
// 				z-index: 10000;
// 			}
// 		}
// 	}
// }

// // [data-type="wca/section"].is-selected .wp-block-wca-layout--resizable .wp-block-wca-column__resize-handles .components-resizable-box__handle,
// [data-type="wca/section"] .wp-block-wca-layout--resizable [data-type="wca/column"].is-selected .wp-block-wca-column__resize-handles .components-resizable-box__handle,
// .wp-block-wca-column--resize-right.components-resizable-box__container .components-resizable-box__handle-right,
// .wp-block-wca-column--resize-left.components-resizable-box__container .components-resizable-box__handle-left {
// 	display: block;
// }

// body.is-resizing [data-type="wca/section"] {
// 	overflow: inherit;
// }