$grid-desktop: repeat(12, 1fr); // Same as 12 instances of 1fr.
$grid-tablet: repeat(8, 1fr);
$grid-mobile: repeat(4, 1fr);
$grid-gutter: 1px;

/**
 * Visual grid overlay
 */
.wca-section {
	position: relative;

	&--tablet {
		.wca-section {
			&__overlay {
				grid-template-columns: $grid-tablet;
			}
		}
	}

	&--mobile {
		.wca-section {
			&__overlay {
				grid-template-columns: $grid-mobile;
			}
		}
	}

	&.is-selected,
	&.has-child-selected {
		.wca-section {
			&__overlay {
				position: absolute;

				&-col {
					box-shadow: -($grid-gutter / 2) 0 0 0 currentColor, ($grid-gutter / 2) 0 0 0 currentColor;
				}
			}
		}
	}

	&__overlay {
		// The following rules are for Safari.
		// A CSS grid rendering issue means the child nodes of this grid
		// won't stretch to fit the vertical space, unless the position
		// property is changed from absolute, to something else, and back.
		// By being relative when unselected and absolute when selected, we
		// constantly "refresh" this hack.
		position: relative;
		pointer-events: none;
		top: 0;
		left: 0; // -$grid-gutter;
		right: 0; // -$grid-gutter;
		bottom: 0;
		display: grid;
		grid-gap: $grid-gutter;
		grid-template-columns: $grid-desktop;
		color: rgba(0,0,0,0.1);
		// Lower the z-index so it's under the block borders.
		z-index: 0;
	}
}